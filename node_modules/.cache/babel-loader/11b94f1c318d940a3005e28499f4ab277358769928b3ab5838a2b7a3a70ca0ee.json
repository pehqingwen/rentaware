{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\registerpage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './registerpage.css';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Validate form data\n  const validateForm = () => {\n    let hasError = false;\n    let newErrors = {};\n    if (!formData.username) {\n      newErrors.username = 'Username is required';\n      hasError = true;\n    }\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n      hasError = true;\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n      hasError = true;\n    }\n    if (formData.password !== formData.passwordRepeat) {\n      newErrors.passwordRepeat = 'Passwords do not match';\n      hasError = true;\n    }\n    setErrors(newErrors);\n    return !hasError;\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return; // Stop submission if validation fails\n    }\n    const {\n      username,\n      email,\n      password\n    } = formData;\n    try {\n      const response = await axios.post('http://localhost:5000/api/route', formData);\n      console.log('Data submitted:', response.data);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  };\n\n  // const onSubmit = async (inputData) => {\n  //     console.log(inputData);\n\n  //     const data = { key: 'value' };  // Assuming this is the data you intend to send\n  //     let response;\n\n  //     if (data.key && typeof data.key === 'string') {\n  //         try {\n  //             response = await fetch('http://localhost:5000/api/route', {\n  //                 method: 'POST',\n  //                 headers: {\n  //                     'Content-Type': 'application/json',\n  //                 },\n  //                 body: JSON.stringify(data)\n  //             });\n\n  //             if (response.ok) {  // Check if the HTTP status code is 200-299\n  //                 console.log('Data sent to server successfully');\n  //                 navigate('/'); // Adjust the route as necessary (e.g., to homepage or dashboard)\n  //             } else {\n  //                 console.error('Server responded with a non-200 status: ', response.status);\n  //                 throw new Error('Something went wrong on api server!');\n  //             }\n  //         } catch (error) {\n  //             console.error('Network or server error: ', error.message);\n  //             // Optionally handle errors in UI, e.g., show a notification or error message\n  //         }\n  //     } else {\n  //         console.error('Invalid data format');\n  //         // Optionally handle data validation errors in UI\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          type: \"email\",\n          placeholder: \"xxx@mailbox.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"passwordRepeat\",\n          value: formData.passwordRepeat,\n          onChange: handleChange,\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), errors.passwordRepeat && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.passwordRepeat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('terms', {\n            required: true\n          }),\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"checkboxNoLabel\",\n          value: \"\",\n          \"aria-label\": \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          children: \"I agree with the Terms & Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), errors.terms && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"You must agree to the terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useForm","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","validateForm","hasError","newErrors","formData","username","email","password","passwordRepeat","setErrors","onSubmit","e","preventDefault","response","post","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","value","onChange","handleChange","type","placeholder","errors","style","color","register","required","id","for","terms","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/registerpage.js"],"sourcesContent":["import React from 'react';\r\nimport './registerpage.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    \r\n\r\n    // Validate form data\r\n    const validateForm = () => {\r\n        let hasError = false;\r\n        let newErrors = {};\r\n        if (!formData.username) {\r\n            newErrors.username = 'Username is required';\r\n            hasError = true;\r\n        }\r\n        if (!formData.email) {\r\n            newErrors.email = 'Email is required';\r\n            hasError = true;\r\n        }\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n            hasError = true;\r\n        }\r\n        if (formData.password !== formData.passwordRepeat) {\r\n            newErrors.passwordRepeat = 'Passwords do not match';\r\n            hasError = true;\r\n        }\r\n        setErrors(newErrors);\r\n        return !hasError;\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        if (!validateForm()) {\r\n            return; // Stop submission if validation fails\r\n        }\r\n\r\n        const { username, email, password } = formData;\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/route', formData);\r\n            console.log('Data submitted:', response.data);\r\n        } catch (error) {\r\n            console.error('Error posting data:', error);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // const onSubmit = async (inputData) => {\r\n    //     console.log(inputData);\r\n\r\n    //     const data = { key: 'value' };  // Assuming this is the data you intend to send\r\n    //     let response;\r\n\r\n    //     if (data.key && typeof data.key === 'string') {\r\n    //         try {\r\n    //             response = await fetch('http://localhost:5000/api/route', {\r\n    //                 method: 'POST',\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json',\r\n    //                 },\r\n    //                 body: JSON.stringify(data)\r\n    //             });\r\n\r\n    //             if (response.ok) {  // Check if the HTTP status code is 200-299\r\n    //                 console.log('Data sent to server successfully');\r\n    //                 navigate('/'); // Adjust the route as necessary (e.g., to homepage or dashboard)\r\n    //             } else {\r\n    //                 console.error('Server responded with a non-200 status: ', response.status);\r\n    //                 throw new Error('Something went wrong on api server!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Network or server error: ', error.message);\r\n    //             // Optionally handle errors in UI, e.g., show a notification or error message\r\n    //         }\r\n    //     } else {\r\n    //         console.error('Invalid data format');\r\n    //         // Optionally handle data validation errors in UI\r\n    //     }\r\n    // };\r\n\r\n\r\n    return (\r\n        <div className='register-form-bg'>\r\n            <h3>Register your account</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your username</h5>\r\n                    <input name=\"username\" value={formData.username} onChange={handleChange} type='text' placeholder='Doe' />\r\n                    {errors.username && <span style={{ color: 'red' }}>{errors.username}</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your email</h5>\r\n                    <input name=\"email\" value={formData.email} onChange={handleChange} type='email' placeholder='xxx@mailbox.com' />\r\n                    {errors.email && <span style={{ color: 'red' }}>{errors.email}</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your password</h5>\r\n                    <input name=\"password\" value={formData.password} onChange={handleChange} type='password' />\r\n                    {errors.password && <span style={{ color: 'red' }}>{errors.password}</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Repeat password</h5>\r\n                    <input name=\"passwordRepeat\" value={formData.passwordRepeat} onChange={handleChange} type='password' />\r\n                    {errors.passwordRepeat && <span style={{ color: 'red' }}>{errors.passwordRepeat}</span>}\r\n                </div>\r\n                <div className='register-center'>\r\n                    <input {...register('terms', { required: true })} className=\"form-check-input\" type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\"></input>\r\n                    <label className=\"form-check-label\" for=\"inlineCheckbox1\">I agree with the Terms & Conditions</label>\r\n                    {errors.terms && <span style={{ color: 'red' }}>You must agree to the terms</span>}\r\n                </div>\r\n                <div className='register-center'>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Register Account</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}