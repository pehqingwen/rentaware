{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\purchaseform.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './rentalform.css';\nimport { json, useLocation, useNavigate } from 'react-router-dom';\nimport { keyboard } from '@testing-library/user-event/dist/keyboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PurchaseForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate(); // if form submit, go to purchase history log (not yet establiushed)\n  const location = useLocation();\n  const productInfoForPurchase = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productInfoForPurchase) || []; //ok (from bakeware directly)\n  // sessionStorage get productName (from rental page)\n\n  // function *if navigate to anywhere other than clicking that 'Submit' button , delete sessionStorage 'transfer'\n  // *if submit button clicked, useNavigate used, navigate away from page, also clear sessionStorage 'transfer'\n\n  // 1: \n  console.log(JSON.stringify(productInfoForPurchase));\n\n  // 2: \n  console.log(sessionStorage.getItem('transfer'));\n  const [productInfo, setProductInfo] = useState([]);\n  useEffect(() => {\n    if (sessionStorage.getItem('transfer') !== null) {\n      fetch('./products.json').then(response => response.json()).then(data => {\n        const filteredInfo = data.filter(prdt => prdt.productName.includes(sessionStorage.getItem('transfer')));\n        console.log(\"impr: \", filteredInfo);\n        setProductInfo(filteredInfo);\n      }).catch(error => console.error('Error fetching products:', error));\n    } else {\n      setProductInfo(JSON.stringify(productInfoForPurchase));\n    }\n  }, []);\n  console.log(\"test if it works: \", productInfo);\n  const clearTransferStorage = () => {\n    sessionStorage.removeItem('transfer');\n    console.log('sessionStorage key \"transfer\" has been cleared');\n  };\n\n  // Add event listener for beforeunload event\n  window.addEventListener('beforeunload', clearTransferStorage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Purchase Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"purchaseform-img-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: productInfo[0].imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: productInfo[0].productName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selling Price: USD \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-per-day\",\n        children: productInfo[0].price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onPurchase),\n      children: /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(PurchaseForm, \"tOKJMzrk0NaprMJfMqzA3PmsKJc=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = PurchaseForm;\nexport default PurchaseForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseForm\");","map":{"version":3,"names":["React","useEffect","useState","json","useLocation","useNavigate","keyboard","jsxDEV","_jsxDEV","PurchaseForm","_s","_location$state","navigate","location","productInfoForPurchase","state","console","log","JSON","stringify","sessionStorage","getItem","productInfo","setProductInfo","fetch","then","response","data","filteredInfo","filter","prdt","productName","includes","catch","error","clearTransferStorage","removeItem","window","addEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","imageURL","price","onSubmit","handleSubmit","onPurchase","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/purchaseform.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './rentalform.css';\r\nimport { json, useLocation, useNavigate } from 'react-router-dom';\r\nimport { keyboard } from '@testing-library/user-event/dist/keyboard';\r\n\r\nconst PurchaseForm = () => {\r\n    const navigate = useNavigate(); // if form submit, go to purchase history log (not yet establiushed)\r\n    const location = useLocation();\r\n    const productInfoForPurchase = location.state?.productInfoForPurchase || []; //ok (from bakeware directly)\r\n    // sessionStorage get productName (from rental page)\r\n\r\n\r\n    // function *if navigate to anywhere other than clicking that 'Submit' button , delete sessionStorage 'transfer'\r\n    // *if submit button clicked, useNavigate used, navigate away from page, also clear sessionStorage 'transfer'\r\n\r\n\r\n    // 1: \r\n    console.log(JSON.stringify(productInfoForPurchase));\r\n\r\n    // 2: \r\n    console.log(sessionStorage.getItem('transfer'));\r\n\r\n    const [productInfo, setProductInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('transfer') !== null) {\r\n            fetch('./products.json')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const filteredInfo = data.filter(prdt =>\r\n                        prdt.productName.includes(sessionStorage.getItem('transfer'))\r\n                    );\r\n                    console.log(\"impr: \", filteredInfo); \r\n                    setProductInfo(filteredInfo);\r\n                })\r\n                .catch(error => console.error('Error fetching products:', error));\r\n        } else {\r\n            setProductInfo(JSON.stringify(productInfoForPurchase));\r\n\r\n        }\r\n    }, []);\r\n\r\n\r\n    console.log(\"test if it works: \", productInfo); \r\n\r\n    const clearTransferStorage = () => {\r\n        sessionStorage.removeItem('transfer');\r\n        console.log('sessionStorage key \"transfer\" has been cleared');\r\n      };\r\n      \r\n      // Add event listener for beforeunload event\r\n      window.addEventListener('beforeunload', clearTransferStorage);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>Purchase Form</h3>\r\n\r\n            <div className='purchaseform-img-bg'>\r\n                <img src={productInfo[0].imageURL}></img>\r\n            </div>\r\n            <h4>{productInfo[0].productName}</h4>\r\n\r\n            <p>Selling Price: USD <span className='price-per-day'>{productInfo[0].price}</span></p>\r\n\r\n            <form onSubmit={handleSubmit(onPurchase)}>\r\n\r\n\r\n<button></button>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseForm; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}