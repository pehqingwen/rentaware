{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\user_quotations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserQuotations = () => {\n  _s();\n  const [quotations, setQuotations] = useState([]);\n  z;\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log('Making request...');\n      try {\n        const response = await axios.get('http://localhost:5000/api/accountinfo');\n        console.log('Data retrieved: ', response.data);\n        setQuotations(response.data);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          console.error('Error:', error.response.data);\n        } else {\n          console.error('Error logging in:', error.response ? error.response.data : error.message);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  const indexCount = index => {\n    return index + 1;\n  };\n  const datePart = string => {\n    return string.split('T')[0];\n  };\n  useEffect(() => {\n    const fetchProductNames = async () => {\n      const names = await Promise.all(quotations.map(async quotation => {\n        const productName = await getProductName(quotation.productID);\n        return {\n          ...quotation,\n          productName\n        };\n      }));\n      setProductNames(names);\n    };\n    if (quotations.length > 0) {\n      fetchProductNames();\n    }\n  }, [quotations]);\n  const getProductName = async productID => {\n    try {\n      const response = await fetch('./products.json');\n      const data = await response.json();\n      const matchedItem = data.find(individual => individual.productID === productID);\n      return matchedItem ? matchedItem.productName : 'Unknown';\n    } catch (error) {\n      console.error('Error fetching product data:', error);\n      return 'Unknown';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quotations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quotation_ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: quotations && quotations.length > 0 ? quotations.map((quotation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: indexCount(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: quotation.quotation_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: datePart(quotation.date_of_creation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: quotations.map(quotation => getProductName(quotation))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)]\n          }, indexCount(index), true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), quotations.map((quotation, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(UserQuotations, \"zsvhQMJrDeeqWVHq468HrEwFPpY=\");\n_c = UserQuotations;\nexport default UserQuotations;\nvar _c;\n$RefreshReg$(_c, \"UserQuotations\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UserQuotations","_s","quotations","setQuotations","z","fetchData","console","log","response","get","data","error","status","message","indexCount","index","datePart","string","split","fetchProductNames","names","Promise","all","map","quotation","productName","getProductName","productID","setProductNames","length","fetch","json","matchedItem","find","individual","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quotation_id","date_of_creation","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/user_quotations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserQuotations = () => {\r\n\r\n    const [quotations, setQuotations] = useState([]);\r\nz\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            console.log('Making request...');\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/accountinfo');\r\n                console.log('Data retrieved: ', response.data);\r\n                setQuotations(response.data);\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 400) {\r\n                    console.error('Error:', error.response.data);\r\n                } else {\r\n                    console.error('Error logging in:', error.response ? error.response.data : error.message);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const indexCount = (index) => {\r\n        return index + 1;\r\n    }\r\n\r\n    const datePart = (string) => {\r\n        return string.split('T')[0];\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchProductNames = async () => {\r\n            const names = await Promise.all(\r\n                quotations.map(async (quotation) => {\r\n                    const productName = await getProductName(quotation.productID);\r\n                    return { ...quotation, productName };\r\n                })\r\n            );\r\n            setProductNames(names);\r\n        };\r\n\r\n        if (quotations.length > 0) {\r\n            fetchProductNames();\r\n        }\r\n    }, [quotations]);\r\n\r\n\r\n    const getProductName = async (productID) => {\r\n        try {\r\n            const response = await fetch('./products.json');\r\n            const data = await response.json();\r\n            const matchedItem = data.find(individual => individual.productID === productID);\r\n            return matchedItem ? matchedItem.productName : 'Unknown';\r\n        } catch (error) {\r\n            console.error('Error fetching product data:', error);\r\n            return 'Unknown';\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quotations</h1>\r\n\r\n            <div className='white-bg'>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Index</th>\r\n                            <th>Quotation_ID</th>\r\n                            <th>Date of Request</th>\r\n                            <th>Product Names</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {(quotations && quotations.length > 0) ? (\r\n                            quotations.map((quotation, index) => (\r\n                                <tr key={indexCount(index)}>\r\n\r\n                                    <td>{indexCount(index)}</td>\r\n\r\n                                    <td>{quotation.quotation_id}</td>\r\n\r\n                                    <td>{datePart(quotation.date_of_creation)}</td>\r\n\r\n                                    {/* retrieve each prdt name from products.json file */}\r\n                                    <td>{(quotations.map(quotation => getProductName(quotation)))}</td>\r\n                                </tr>\r\n                            ))\r\n\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan=\"5\">No data available</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {\r\n                quotations.map((quotation, index) => (\r\n                    <div key={index}>\r\n                        {/* <p>ID: {quotation.quotation_id}</p>\r\n                    <p>Date: {quotation.date_of_creation}</p>\r\n                    <p>Product IDs: {quotation.productid_combination}</p>\r\n                    <p>Quantity: {quotation.quotation_quantity}</p> */}\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserQuotations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}