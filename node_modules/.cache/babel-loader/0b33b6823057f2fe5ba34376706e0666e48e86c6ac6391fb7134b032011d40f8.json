{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\purchaseform.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './rentalform.css';\nimport { json, useLocation, useNavigate } from 'react-router-dom';\nimport { keyboard } from '@testing-library/user-event/dist/keyboard';\nimport { useForm } from 'react-hook-form';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PurchaseForm = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate(); // if form submit, go to purchase history log \n  const location = useLocation();\n  const productInfoForPurchase = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.productInfoForPurchase) || [];\n\n  // 1: //\n  console.log(JSON.stringify(productInfoForPurchase));\n\n  // 2: //\n  console.log(sessionStorage.getItem('transfer'));\n  const keyword = sessionStorage.getItem('transfer');\n  const [productInfo, setProductInfo] = useState([]);\n  useEffect(() => {\n    if (sessionStorage.getItem('transfer') !== null) {\n      fetch('./products.json').then(response => response.json()).then(data => {\n        console.log(\"Data fetched:\", data); // Debugging\n        const filteredInfo = data.filter(prdt => prdt.productName.toLowerCase().includes(keyword.toLowerCase()));\n        console.log(\"impt: \", filteredInfo);\n        setProductInfo(filteredInfo);\n      }).catch(error => console.error('Error fetching products:', error));\n    } else {\n      setProductInfo(JSON.stringify(productInfoForPurchase));\n    }\n  }, [keyword]);\n\n  // over here: \n  console.log(\"test if it works: \", productInfo);\n  const clearTransferStorage = () => {\n    sessionStorage.removeItem('transfer');\n    console.log('sessionStorage key \"transfer\" has been cleared');\n  };\n\n  // Add event listener for beforeunload event\n  window.addEventListener('beforeunload', clearTransferStorage);\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onPurchase = async formData => {\n    // email is from localStorage\n    const email = localStorage.getItem('email');\n    try {\n      const response = await axios.post('http://localhost:5000/api/purchase', {\n        email: email,\n        productId: productInfo.productID,\n        productName: productInfo.productName,\n        productPrice: productInfo.price,\n        selectedQty: purchaseQty,\n        totalAmount: formData.totalAmount,\n        companyName: formData.companyName,\n        contactNumber: formData.contactNumber,\n        addressLine1: formData.addressLine1,\n        addressLine2: formData.addressLine2\n      });\n    } catch (error) {\n      if (error.response) {\n        console.error('Error:', error.response.data);\n      }\n    }\n  };\n  useEffect(() => {\n    const $select = $(\".p1-30\");\n    if ($select.children().length === 0) {\n      for (let i = 1; i <= 30; i++) {\n        $select.append($('<option></option>').val(i).html(i));\n      }\n    }\n  }, []);\n  const [purchaseQty, setPurchaseQty] = useState(1);\n  const [totalAmount, setTotalAmount] = useState(productInfo[0].price);\n  useEffect(() => {\n    setTotalAmount(purchaseQty * productInfo[0].price);\n  }, [purchaseQty, productInfo]);\n\n  // Particulars of customer \n  const [companyName, setCompanyName] = useState([]);\n  const [contactNumber, setContactNumber] = useState([]);\n  const [addressLine1, setAddressLine1] = useState([]);\n  const [addressLine2, setAddressLine2] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center spacing-between-divisions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(PurchaseForm, \"Ygjtj+z0vJVupbVn7bMYgF7ScmA=\", false, function () {\n  return [useNavigate, useLocation, useForm];\n});\n_c = PurchaseForm;\nexport default PurchaseForm;\nvar _c;\n$RefreshReg$(_c, \"PurchaseForm\");","map":{"version":3,"names":["React","useEffect","useState","json","useLocation","useNavigate","keyboard","useForm","axios","$","jsxDEV","_jsxDEV","PurchaseForm","_s","_location$state","navigate","location","productInfoForPurchase","state","console","log","JSON","stringify","sessionStorage","getItem","keyword","productInfo","setProductInfo","fetch","then","response","data","filteredInfo","filter","prdt","productName","toLowerCase","includes","catch","error","clearTransferStorage","removeItem","window","addEventListener","register","handleSubmit","formState","errors","onPurchase","formData","email","localStorage","post","productId","productID","productPrice","price","selectedQty","purchaseQty","totalAmount","companyName","contactNumber","addressLine1","addressLine2","$select","children","length","i","append","val","html","setPurchaseQty","setTotalAmount","setCompanyName","setContactNumber","setAddressLine1","setAddressLine2","className","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/purchaseform.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './rentalform.css';\r\nimport { json, useLocation, useNavigate } from 'react-router-dom';\r\nimport { keyboard } from '@testing-library/user-event/dist/keyboard';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport $ from 'jquery';\r\n\r\nconst PurchaseForm = () => {\r\n    const navigate = useNavigate(); // if form submit, go to purchase history log \r\n    const location = useLocation();\r\n    const productInfoForPurchase = location.state?.productInfoForPurchase || [];\r\n\r\n    // 1: //\r\n    console.log(JSON.stringify(productInfoForPurchase));\r\n\r\n    // 2: //\r\n    console.log(sessionStorage.getItem('transfer'));\r\n    const keyword = sessionStorage.getItem('transfer');\r\n\r\n    const [productInfo, setProductInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (sessionStorage.getItem('transfer') !== null) {\r\n            fetch('./products.json')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(\"Data fetched:\", data);  // Debugging\r\n                    const filteredInfo = data.filter(prdt =>\r\n                        prdt.productName.toLowerCase().includes(keyword.toLowerCase())\r\n                    );\r\n                    console.log(\"impt: \", filteredInfo);\r\n                    setProductInfo(filteredInfo);\r\n                })\r\n                .catch(error => console.error('Error fetching products:', error));\r\n        } else {\r\n            setProductInfo(JSON.stringify(productInfoForPurchase));\r\n\r\n        }\r\n    }, [keyword]);\r\n\r\n    // over here: \r\n    console.log(\"test if it works: \", productInfo);\r\n\r\n    const clearTransferStorage = () => {\r\n        sessionStorage.removeItem('transfer');\r\n        console.log('sessionStorage key \"transfer\" has been cleared');\r\n    };\r\n\r\n    // Add event listener for beforeunload event\r\n    window.addEventListener('beforeunload', clearTransferStorage);\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm();\r\n\r\n    const onPurchase = async (formData) => {\r\n\r\n        // email is from localStorage\r\n        const email = localStorage.getItem('email');\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/purchase', {\r\n                email: email,\r\n                productId: productInfo.productID,\r\n                productName: productInfo.productName,\r\n                productPrice: productInfo.price,\r\n                selectedQty: purchaseQty,\r\n                totalAmount: formData.totalAmount,\r\n                companyName: formData.companyName,\r\n                contactNumber: formData.contactNumber,\r\n                addressLine1: formData.addressLine1,\r\n                addressLine2: formData.addressLine2\r\n            });\r\n\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error('Error:', error.response.data);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const $select = $(\".p1-30\");\r\n        if ($select.children().length === 0) {\r\n            for (let i = 1; i <= 30; i++) {\r\n                $select.append($('<option></option>').val(i).html(i));\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const [purchaseQty, setPurchaseQty] = useState(1);\r\n\r\n    const [totalAmount, setTotalAmount] = useState(productInfo[0].price);\r\n\r\n    useEffect(() => {\r\n        setTotalAmount(purchaseQty * productInfo[0].price);\r\n    }, [purchaseQty, productInfo]);\r\n\r\n\r\n    // Particulars of customer \r\n    const [companyName, setCompanyName] = useState([]);\r\n    const [contactNumber, setContactNumber] = useState([]);\r\n    const [addressLine1, setAddressLine1] = useState([]);\r\n    const [addressLine2, setAddressLine2] = useState([]);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <h3>Purchase Form</h3>\r\n\r\n            <div className='purchaseform-img-bg'>\r\n                <img src={productInfo[0].imageURL}></img>\r\n            </div>\r\n            <h4>{productInfo[0].productName}</h4>\r\n\r\n            <p>Selling Price: USD <span className='price-per-day'>{productInfo[0].price}</span></p>\r\n\r\n            <form onSubmit={handleSubmit(onPurchase)}>\r\n\r\n                <div className='spacing-between-divisions flex-display'>\r\n                    <p>Quantity: </p>\r\n                    <select className=\"p1-30\" onChange={(e) => setPurchaseQty(Number(e.target.value))}></select>\r\n                </div>\r\n\r\n                <p>Total costs: USD <input {...register(\"totalAmount\", { required: \"This is required\" })} type='text' className='total-cost-purchase' value={totalAmount} readOnly></input>\r\n                    {errors.totalAmount && <span style={{ color: 'red' }}>{errors.totalAmount.message}</span>}\r\n                </p>\r\n\r\n                <h5 style={{ paddingTop: '25px' }}>Particulars</h5>\r\n\r\n                <p>Company Name: <input {...register(\"companyName\", { required: \"This is required\" })} type='text' value={companyName} onChange={(e) => setCompanyName(e.target.value)} style={{ width: '100%' }}></input>\r\n                    {errors.companyName && <span style={{ color: 'red' }}>{errors.companyName.message}</span>}\r\n                </p>\r\n                <p>Contact Number: <input {...register(\"contactNumber\", { required: \"This is required\" })} placeholder=\"123-456-7890\" type='tel' onChange={(e) => setContactNumber(e.target.value)} value={contactNumber}></input>\r\n                    {errors.contactNumber && <span style={{ color: 'red' }}>{errors.contactNumber.message}</span>}\r\n                </p>\r\n                <p>Address Line 1: <input {...register(\"addressLine1\", { required: \"This is required\" })} type='text' onChange={(e) => setAddressLine1(e.target.value)} value={addressLine1} style={{ width: '100%' }}></input>\r\n                    {errors.addressLine1 && <span style={{ color: 'red' }}>{errors.addressLine1.message}</span>}\r\n                </p>\r\n                <p>Address Line 2: <input {...register(\"addressLine2\", { required: \"This is required\" })} type='text' onChange={(e) => setAddressLine2(e.target.value)} value={addressLine2} style={{ width: '100%' }}></input>\r\n                    {errors.addressLine2 && <span style={{ color: 'red' }}>{errors.addressLine2.message}</span>}\r\n                </p> */}\r\n\r\n                <div className='center spacing-between-divisions'>\r\n                    <button type='submit' className='btn btn-warning'></button>\r\n                </div>\r\n\r\n            {/* </form> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PurchaseForm; \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}