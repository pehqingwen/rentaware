{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  stringifyLocal\n} = require(\"./utils\");\nconst schema = require(\"./loader-options.json\");\nconst MiniCssExtractPlugin = require(\"./index\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n/** @typedef {import(\"webpack\").Module} Module */\n/** @typedef {import(\"webpack\").sources.Source} Source */\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n/** @typedef {{ [key: string]: string | function }} Locals */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: Locals | undefined }} context\n * @returns {string}\n */\nfunction hotLoader(content, context) {\n  const localsJsonString = JSON.stringify(JSON.stringify(context.locals));\n  return `${content}\n    if(module.hot) {\n      (function() {\n        var localsJsonString = ${localsJsonString};\n        // ${Date.now()}\n        var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify(context.options)});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  `;\n}\n\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\nfunction pitch(request) {\n  if (this._compiler && this._compiler.options && this._compiler.options.experiments && this._compiler.options.experiments.css && this._module && (this._module.type === \"css\" || this._module.type === \"css/auto\" || this._module.type === \"css/global\" || this._module.type === \"css/module\")) {\n    this.emitWarning(new Error('You can\\'t use `experiments.css` (`experiments.futureDefaults` enable built-in CSS support by default) and `mini-css-extract-plugin` together, please set `experiments.css` to `false` or set `{ type: \"javascript/auto\" }` for rules with `mini-css-extract-plugin` in your webpack config (now `mini-css-extract-plugin` does nothing).'));\n    return;\n  }\n\n  // @ts-ignore\n  const options = this.getOptions( /** @type {Schema} */schema);\n  const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n  const callback = this.async();\n  const optionsFromPlugin = /** @type {TODO} */this[MiniCssExtractPlugin.pluginSymbol];\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n  const {\n    webpack\n  } = /** @type {Compiler} */this._compiler;\n\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {Locals | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n      const identifierCountMap = new Map();\n      let lastDep;\n      for (const dependency of dependencies) {\n        if (!( /** @type {Dependency} */dependency.identifier) || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        const count = identifierCountMap.get( /** @type {Dependency} */dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n\n        /** @type {NormalModule} */\n        this._module.addDependency(lastDep = new CssDependency( /** @type {Dependency} */\n        dependency, /** @type {Dependency} */\n        dependency.context, count));\n        identifierCountMap.set( /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport =\n      // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            /** @type {Locals} */\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n\n      /** @type {Dependency[] | [null, object][]} */\n      let dependencies;\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap, supports, layer]) => {\n          let identifier = id;\n          let context;\n          if (compilation) {\n            const module = /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) :\n            // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n      addDependencies(dependencies);\n    } catch (e) {\n      callback( /** @type {Error} */e);\n      return;\n    }\n    const result = function makeResult() {\n      if (locals) {\n        if (namedExport) {\n          const identifiers = Array.from(function* generateIdentifiers() {\n            let identifierId = 0;\n            for (const key of Object.keys(locals)) {\n              identifierId += 1;\n              yield [`_${identifierId.toString(16)}`, key];\n            }\n          }());\n          const localsString = identifiers.map(([id, key]) => `\\nvar ${id} = ${stringifyLocal( /** @type {Locals} */locals[key])};`).join(\"\");\n          const exportsString = `export { ${identifiers.map(([id, key]) => `${id} as ${JSON.stringify(key)}`).join(\", \")} }`;\n          const defaultExport = typeof options.defaultExport !== \"undefined\" ? options.defaultExport : false;\n          return defaultExport ? `${localsString}\\n${exportsString}\\nexport default { ${identifiers.map(([id, key]) => `${JSON.stringify(key)}: ${id}`).join(\", \")} }\\n` : `${localsString}\\n${exportsString}\\n`;\n        }\n        return `\\n${esModule ? \"export default\" : \"module.exports = \"} ${JSON.stringify(locals)};`;\n      } else if (esModule) {\n        return \"\\nexport {};\";\n      }\n      return \"\";\n    }();\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`;\n\n    // only attempt hotreloading if the css is actually used for something other than hash values\n    resultSource += this.hot && emit ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n  let {\n    publicPath\n  } = /** @type {Compilation} */\n  this._compilation.outputOptions;\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n    let publicPathForExtract;\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath: ( /** @type {string} */publicPathForExtract),\n      baseUri: `${BASE_URI}/`\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n      handleExports(exports);\n    });\n    return;\n  }\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n  const childCompiler = /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions);\n\n  // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n  childCompiler.options.module = {\n    ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = {\n    ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = {\n    ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n\n  // @ts-ignore\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n\n  /** @type {string | Buffer} */\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source();\n\n      // Remove all chunk assets\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n    if ( /** @type {Compilation} */compilation.errors.length > 0) {\n      callback( /** @type {Compilation} */compilation.errors[0]);\n      return;\n    }\n\n    /** @type {{ [name: string]: Source }} */\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n    const assetsInfo = new Map();\n    for (const asset of /** @type {Compilation} */compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n\n    /** @type {Compilation} */\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n\n    /** @type {Compilation} */\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n    let originalExports;\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback( /** @type {Error} */e);\n      return;\n    }\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} content\n */\n// eslint-disable-next-line consistent-return\nfunction loader(content) {\n  if (this._compiler && this._compiler.options && this._compiler.options.experiments && this._compiler.options.experiments.css && this._module && (this._module.type === \"css\" || this._module.type === \"css/auto\" || this._module.type === \"css/global\" || this._module.type === \"css/module\")) {\n    return content;\n  }\n}\nmodule.exports = loader;\nmodule.exports.pitch = pitch;\nmodule.exports.hotLoader = hotLoader;","map":{"version":3,"names":["path","require","findModuleById","evalModuleCode","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","BASE_URI","SINGLE_DOT_PATH_SEGMENT","stringifyRequest","stringifyLocal","schema","MiniCssExtractPlugin","hotLoader","content","context","localsJsonString","JSON","stringify","locals","Date","now","loaderContext","join","__dirname","options","pitch","request","_compiler","experiments","css","_module","type","emitWarning","Error","getOptions","emit","callback","async","optionsFromPlugin","pluginSymbol","webpack","handleExports","originalExports","compilation","assets","assetsInfo","namedExport","esModule","addDependencies","dependencies","Array","isArray","identifierCountMap","Map","lastDep","dependency","identifier","count","get","CssDependency","getCssDependency","addDependency","set","exports","__esModule","default","Object","keys","forEach","key","map","id","media","sourceMap","supports","layer","module","rootContext","Buffer","from","undefined","e","result","makeResult","identifiers","generateIdentifiers","identifierId","toString","localsString","exportsString","defaultExport","resultSource","pluginName","hot","publicPath","_compilation","outputOptions","resourcePath","experimentalUseImportModule","importModule","publicPathForExtract","isAbsolutePublicPath","test","replace","baseUri","error","loaders","slice","loaderIndex","childFilename","filename","childCompiler","createChildCompiler","parser","javascript","url","NodeTemplatePlugin","node","NodeTargetPlugin","apply","EntryOptionPlugin","library","EnableLibraryPlugin","applyEntryOption","child","import","LimitChunkCountPlugin","optimize","maxChunks","NormalModule","hooks","thisCompilation","tap","normalModuleHook","getCompilationHooks","loader","ident","source","processAssets","chunks","chunk","files","file","deleteAsset","runAsChild","entries","errors","length","create","asset","getAssets","name","info","fileDependencies","dep","contextDependencies","addContextDependency"],"sources":["C:/Users/pehqi/my-react-app/node_modules/mini-css-extract-plugin/dist/loader.js"],"sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  BASE_URI,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest,\n  stringifyLocal\n} = require(\"./utils\");\nconst schema = require(\"./loader-options.json\");\nconst MiniCssExtractPlugin = require(\"./index\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n/** @typedef {import(\"webpack\").Module} Module */\n/** @typedef {import(\"webpack\").sources.Source} Source */\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n/** @typedef {{ [key: string]: string | function }} Locals */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: Locals | undefined }} context\n * @returns {string}\n */\nfunction hotLoader(content, context) {\n  const localsJsonString = JSON.stringify(JSON.stringify(context.locals));\n  return `${content}\n    if(module.hot) {\n      (function() {\n        var localsJsonString = ${localsJsonString};\n        // ${Date.now()}\n        var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify(context.options)});\n        // only invalidate when locals change\n        if (\n          module.hot.data &&\n          module.hot.data.value &&\n          module.hot.data.value !== localsJsonString\n        ) {\n          module.hot.invalidate();\n        } else {\n          module.hot.accept();\n        }\n        module.hot.dispose(function(data) {\n          data.value = localsJsonString;\n          cssReload();\n        });\n      })();\n    }\n  `;\n}\n\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\nfunction pitch(request) {\n  if (this._compiler && this._compiler.options && this._compiler.options.experiments && this._compiler.options.experiments.css && this._module && (this._module.type === \"css\" || this._module.type === \"css/auto\" || this._module.type === \"css/global\" || this._module.type === \"css/module\")) {\n    this.emitWarning(new Error('You can\\'t use `experiments.css` (`experiments.futureDefaults` enable built-in CSS support by default) and `mini-css-extract-plugin` together, please set `experiments.css` to `false` or set `{ type: \"javascript/auto\" }` for rules with `mini-css-extract-plugin` in your webpack config (now `mini-css-extract-plugin` does nothing).'));\n    return;\n  }\n\n  // @ts-ignore\n  const options = this.getOptions( /** @type {Schema} */schema);\n  const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n  const callback = this.async();\n  const optionsFromPlugin = /** @type {TODO} */this[MiniCssExtractPlugin.pluginSymbol];\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n  const {\n    webpack\n  } = /** @type {Compiler} */this._compiler;\n\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {Locals | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n      const identifierCountMap = new Map();\n      let lastDep;\n      for (const dependency of dependencies) {\n        if (!( /** @type {Dependency} */dependency.identifier) || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n        const count = identifierCountMap.get( /** @type {Dependency} */dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n\n        /** @type {NormalModule} */\n        this._module.addDependency(lastDep = new CssDependency( /** @type {Dependency} */\n        dependency, /** @type {Dependency} */\n        dependency.context, count));\n        identifierCountMap.set( /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport =\n      // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            /** @type {Locals} */\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n\n      /** @type {Dependency[] | [null, object][]} */\n      let dependencies;\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap, supports, layer]) => {\n          let identifier = id;\n          let context;\n          if (compilation) {\n            const module = /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) :\n            // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n      addDependencies(dependencies);\n    } catch (e) {\n      callback( /** @type {Error} */e);\n      return;\n    }\n    const result = function makeResult() {\n      if (locals) {\n        if (namedExport) {\n          const identifiers = Array.from(function* generateIdentifiers() {\n            let identifierId = 0;\n            for (const key of Object.keys(locals)) {\n              identifierId += 1;\n              yield [`_${identifierId.toString(16)}`, key];\n            }\n          }());\n          const localsString = identifiers.map(([id, key]) => `\\nvar ${id} = ${stringifyLocal( /** @type {Locals} */locals[key])};`).join(\"\");\n          const exportsString = `export { ${identifiers.map(([id, key]) => `${id} as ${JSON.stringify(key)}`).join(\", \")} }`;\n          const defaultExport = typeof options.defaultExport !== \"undefined\" ? options.defaultExport : false;\n          return defaultExport ? `${localsString}\\n${exportsString}\\nexport default { ${identifiers.map(([id, key]) => `${JSON.stringify(key)}: ${id}`).join(\", \")} }\\n` : `${localsString}\\n${exportsString}\\n`;\n        }\n        return `\\n${esModule ? \"export default\" : \"module.exports = \"} ${JSON.stringify(locals)};`;\n      } else if (esModule) {\n        return \"\\nexport {};\";\n      }\n      return \"\";\n    }();\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`;\n\n    // only attempt hotreloading if the css is actually used for something other than hash values\n    resultSource += this.hot && emit ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n  let {\n    publicPath\n  } = /** @type {Compilation} */\n  this._compilation.outputOptions;\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n    let publicPathForExtract;\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath: ( /** @type {string} */publicPathForExtract),\n      baseUri: `${BASE_URI}/`\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n      handleExports(exports);\n    });\n    return;\n  }\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n  const childCompiler = /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions);\n\n  // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n  childCompiler.options.module = {\n    ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = {\n    ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = {\n    ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n\n  // @ts-ignore\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n\n  /** @type {string | Buffer} */\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source();\n\n      // Remove all chunk assets\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n    if ( /** @type {Compilation} */compilation.errors.length > 0) {\n      callback( /** @type {Compilation} */compilation.errors[0]);\n      return;\n    }\n\n    /** @type {{ [name: string]: Source }} */\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n    const assetsInfo = new Map();\n    for (const asset of /** @type {Compilation} */compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n\n    /** @type {Compilation} */\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n\n    /** @type {Compilation} */\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n    let originalExports;\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback( /** @type {Error} */e);\n      return;\n    }\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} content\n */\n// eslint-disable-next-line consistent-return\nfunction loader(content) {\n  if (this._compiler && this._compiler.options && this._compiler.options.experiments && this._compiler.options.experiments.css && this._module && (this._module.type === \"css\" || this._module.type === \"css/auto\" || this._module.type === \"css/global\" || this._module.type === \"css/module\")) {\n    return content;\n  }\n}\nmodule.exports = loader;\nmodule.exports.pitch = pitch;\nmodule.exports.hotLoader = hotLoader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}