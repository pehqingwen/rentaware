{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\user_quotations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserQuotations = () => {\n  _s();\n  const [quotations, setQuotations] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log('Making request...');\n      try {\n        const response = await axios.get('http://localhost:5000/api/accountinfo');\n        console.log('Data retrieved: ', response.data);\n        // setQuotations according to email logged in\n        const emailLoggedIn = JSON.parse(localStorage.getItem('email'));\n        setQuotations(response.data.filter(item => item.quotation_email.replace(/[\"\\\\]/g, '') === emailLoggedIn));\n        console.log(quotations);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          console.error('Error:', error.response.data);\n        } else {\n          console.error('Error logging in:', error.response ? error.response.data : error.message);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  const indexCount = index => {\n    return index + 1;\n  };\n  const datePart = string => {\n    return string.split('T')[0];\n  };\n  const getProductNames = array => {\n    // separate & store ids in new let array\n    // for each id, find the name \n    // store names inside new array \n    // return names array \n    array.map(item => re);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quotations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: quotations && quotations.length > 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quotation_ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: quotations && quotations.length > 0 ? quotations.map((quotation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: indexCount(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: quotation.quotation_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: datePart(quotation.date_of_creation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: getProductNames(quotation.productid_combination)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this)]\n          }, indexCount(index), true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No data available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(UserQuotations, \"v9IoEc9gGmqhtqWnXQbheDvHEME=\");\n_c = UserQuotations;\nexport default UserQuotations;\nvar _c;\n$RefreshReg$(_c, \"UserQuotations\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UserQuotations","_s","quotations","setQuotations","fetchData","console","log","response","get","data","emailLoggedIn","JSON","parse","localStorage","getItem","filter","item","quotation_email","replace","error","status","message","indexCount","index","datePart","string","split","getProductNames","array","map","re","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","quotation","quotation_id","date_of_creation","productid_combination","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/user_quotations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserQuotations = () => {\r\n\r\n    const [quotations, setQuotations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            console.log('Making request...');\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/accountinfo');\r\n                console.log('Data retrieved: ', response.data);\r\n                // setQuotations according to email logged in\r\n                const emailLoggedIn = JSON.parse(localStorage.getItem('email'));\r\n                setQuotations(response.data.filter(item => item.quotation_email.replace(/[\"\\\\]/g, '') === emailLoggedIn));\r\n                console.log(quotations); \r\n            } catch (error) {\r\n                if (error.response && error.response.status === 400) {\r\n                    console.error('Error:', error.response.data);\r\n                } else {\r\n                    console.error('Error logging in:', error.response ? error.response.data : error.message);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const indexCount = (index) => {\r\n        return index + 1;\r\n    }\r\n\r\n    const datePart = (string) => {\r\n        return string.split('T')[0];\r\n    }\r\n\r\n    const getProductNames = (array) => {\r\n        // separate & store ids in new let array\r\n        // for each id, find the name \r\n        // store names inside new array \r\n        // return names array \r\n        array.map(item => re)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quotations</h1>\r\n\r\n            <div className='white-bg'>\r\n                <table>\r\n                    <thead>\r\n                        {quotations && quotations.length > 0 && (\r\n                            <tr>\r\n                                <th>Index</th>\r\n                                <th>Quotation_ID</th>\r\n                                <th>Date of Request</th>\r\n                                <th>Product Names</th>\r\n                            </tr>\r\n                        )}\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {(quotations && quotations.length > 0) ? (\r\n                            quotations.map((quotation, index) => (\r\n                                <tr key={indexCount(index)}>\r\n\r\n                                    <td>{indexCount(index)}</td>\r\n\r\n                                    <td>{quotation.quotation_id}</td>\r\n\r\n                                    <td>{datePart(quotation.date_of_creation)}</td>\r\n\r\n                                    {/* retrieve each prdt name from products.json file */}\r\n                                    <td>{getProductNames(quotation.productid_combination)}</td>\r\n                                </tr>\r\n                            ))\r\n\r\n                        ) : (\r\n                            <p>No data available.</p>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserQuotations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}