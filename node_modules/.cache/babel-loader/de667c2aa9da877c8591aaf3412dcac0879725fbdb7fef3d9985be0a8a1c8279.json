{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\registerpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './registerpage.css';\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordRepeat: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Validate form data\n  const validateForm = () => {\n    let hasError = false;\n    let newErrors = {};\n    if (!formData.username) {\n      newErrors.username = 'Username is required';\n      hasError = true;\n    }\n    if (!formData.email) {\n      newErrors.email = 'Email is required';\n      hasError = true;\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n      hasError = true;\n    }\n    if (formData.password !== formData.passwordRepeat) {\n      newErrors.passwordRepeat = 'Passwords do not match';\n      hasError = true;\n    }\n    setErrors(newErrors);\n    return !hasError;\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return; // Stop submission if validation fails\n    }\n    try {\n      const response = await axios.post('/api/route', formData);\n      console.log('Data submitted:', response.data);\n    } catch (error) {\n      console.error('Error posting data:', error);\n    }\n  };\n\n  // const onSubmit = async (inputData) => {\n  //     console.log(inputData);\n\n  //     const data = { key: 'value' };  // Assuming this is the data you intend to send\n  //     let response;\n\n  //     if (data.key && typeof data.key === 'string') {\n  //         try {\n  //             response = await fetch('http://localhost:5000/api/route', {\n  //                 method: 'POST',\n  //                 headers: {\n  //                     'Content-Type': 'application/json',\n  //                 },\n  //                 body: JSON.stringify(data)\n  //             });\n\n  //             if (response.ok) {  // Check if the HTTP status code is 200-299\n  //                 console.log('Data sent to server successfully');\n  //                 navigate('/'); // Adjust the route as necessary (e.g., to homepage or dashboard)\n  //             } else {\n  //                 console.error('Server responded with a non-200 status: ', response.status);\n  //                 throw new Error('Something went wrong on api server!');\n  //             }\n  //         } catch (error) {\n  //             console.error('Network or server error: ', error.message);\n  //             // Optionally handle errors in UI, e.g., show a notification or error message\n  //         }\n  //     } else {\n  //         console.error('Invalid data format');\n  //         // Optionally handle data validation errors in UI\n  //     }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-form-bg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange,\n          type: \"text\",\n          placeholder: \"Doe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('email', {\n            required: true\n          }),\n          type: \"text\",\n          placeholder: \"xxx@mailbox.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('password', {\n            required: true\n          }),\n          type: \"password\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"This field is required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-account-inputs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Repeat password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('passwordRepeat', {\n            validate: value => value === watch('password') || 'Passwords do not match'\n          }),\n          type: \"password\",\n          placeholder: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), errors.passwordRepeat && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: errors.passwordRepeat.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...register('terms', {\n            required: true\n          }),\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          id: \"checkboxNoLabel\",\n          value: \"\",\n          \"aria-label\": \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          for: \"inlineCheckbox1\",\n          children: \"I agree with the Terms & Conditions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), errors.terms && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'red'\n          },\n          children: \"You must agree to the terms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          children: \"Register Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"0bQYc0ZHGA8mVc7M2a6G/PQ0GOE=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useForm","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","navigate","register","handleSubmit","watch","formState","errors","formData","setFormData","username","email","password","passwordRepeat","handleChange","e","target","name","value","validateForm","hasError","newErrors","setErrors","onSubmit","preventDefault","response","post","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","type","placeholder","style","color","required","validate","message","id","for","terms","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/registerpage.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './registerpage.css';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\n\r\nconst Register = () => {\r\n    const navigate = useNavigate();\r\n    const { register, handleSubmit, watch, formState: { errors } } = useForm();\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',   \r\n        password: '',\r\n        passwordRepeat: '' \r\n    });\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    // Validate form data\r\n    const validateForm = () => {\r\n        let hasError = false;\r\n        let newErrors = {};\r\n        if (!formData.username) {\r\n            newErrors.username = 'Username is required';\r\n            hasError = true;\r\n        }\r\n        if (!formData.email) {\r\n            newErrors.email = 'Email is required';\r\n            hasError = true;\r\n        }\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n            hasError = true;\r\n        }\r\n        if (formData.password !== formData.passwordRepeat) {\r\n            newErrors.passwordRepeat = 'Passwords do not match';\r\n            hasError = true;\r\n        }\r\n        setErrors(newErrors);\r\n        return !hasError;\r\n    };\r\n\r\n    const onSubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        if (!validateForm()) {\r\n            return; // Stop submission if validation fails\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/api/route', formData);\r\n            console.log('Data submitted:', response.data);\r\n        } catch (error) {\r\n            console.error('Error posting data:', error);\r\n        }\r\n\r\n    };\r\n\r\n\r\n    // const onSubmit = async (inputData) => {\r\n    //     console.log(inputData);\r\n\r\n    //     const data = { key: 'value' };  // Assuming this is the data you intend to send\r\n    //     let response;\r\n\r\n    //     if (data.key && typeof data.key === 'string') {\r\n    //         try {\r\n    //             response = await fetch('http://localhost:5000/api/route', {\r\n    //                 method: 'POST',\r\n    //                 headers: {\r\n    //                     'Content-Type': 'application/json',\r\n    //                 },\r\n    //                 body: JSON.stringify(data)\r\n    //             });\r\n\r\n    //             if (response.ok) {  // Check if the HTTP status code is 200-299\r\n    //                 console.log('Data sent to server successfully');\r\n    //                 navigate('/'); // Adjust the route as necessary (e.g., to homepage or dashboard)\r\n    //             } else {\r\n    //                 console.error('Server responded with a non-200 status: ', response.status);\r\n    //                 throw new Error('Something went wrong on api server!');\r\n    //             }\r\n    //         } catch (error) {\r\n    //             console.error('Network or server error: ', error.message);\r\n    //             // Optionally handle errors in UI, e.g., show a notification or error message\r\n    //         }\r\n    //     } else {\r\n    //         console.error('Invalid data format');\r\n    //         // Optionally handle data validation errors in UI\r\n    //     }\r\n    // };\r\n\r\n\r\n    return (\r\n        <div className='register-form-bg'>\r\n            <h3>Register your account</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your username</h5>\r\n                    <input name=\"username\" value={formData.username} onChange={handleChange} type='text' placeholder='Doe' />\r\n                    {errors.username && <span style={{ color: 'red' }}>{errors.username}</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your email</h5>\r\n                    <input {...register('email', { required: true })} type='text' placeholder='xxx@mailbox.com'></input>\r\n                    {errors.email && <span style={{ color: 'red' }}>This field is required</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Your password</h5>\r\n                    <input {...register('password', { required: true })} type='password' placeholder=''></input>\r\n                    {errors.password && <span style={{ color: 'red' }}>This field is required</span>}\r\n                </div>\r\n                <div className='register-account-inputs'>\r\n                    <h5>Repeat password</h5>\r\n                    <input {...register('passwordRepeat', {\r\n                        validate: value => value === watch('password') || 'Passwords do not match'\r\n                    })} type='password' placeholder=''></input>\r\n                    {errors.passwordRepeat && <span style={{ color: 'red' }}>{errors.passwordRepeat.message}</span>}\r\n                </div>\r\n                <div className='register-center'>\r\n                    <input {...register('terms', { required: true })} className=\"form-check-input\" type=\"checkbox\" id=\"checkboxNoLabel\" value=\"\" aria-label=\"...\"></input>\r\n                    <label className=\"form-check-label\" for=\"inlineCheckbox1\">I agree with the Terms & Conditions</label>\r\n                    {errors.terms && <span style={{ color: 'red' }}>You must agree to the terms</span>}\r\n                </div>\r\n                <div className='register-center'>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Register Account</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}