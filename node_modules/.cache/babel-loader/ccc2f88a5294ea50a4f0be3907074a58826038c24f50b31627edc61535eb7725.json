{"ast":null,"code":"\"use strict\";\n\n/* eslint-disable class-methods-use-this */\nconst path = require(\"path\");\nconst {\n  validate\n} = require(\"schema-utils\");\nconst {\n  SyncWaterfallHook\n} = require(\"tapable\");\nconst schema = require(\"./plugin-options.json\");\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI,\n  compileBooleanMatcher\n} = require(\"./utils\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n/** @typedef {import(\"webpack\").Module} Module */\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n/** @typedef {import(\"webpack\").sources.Source} Source */\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n * @property {boolean} [defaultExport]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n/**\n * @typedef {Object} VarNames\n * @property {string} tag\n * @property {string} chunkId\n * @property {string} href\n * @property {string} resolve\n * @property {string} reject\n */\n/**\n * @typedef {Object} MiniCssExtractPluginCompilationHooks\n * @property {import(\"tapable\").SyncWaterfallHook<[string, VarNames], string>} beforeTagInsert\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\nconst registered = new WeakSet();\n\n/** @type {WeakMap<Compilation, MiniCssExtractPluginCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return /** @type {CssModuleConstructor} */cssModuleCache.get(webpack);\n    }\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor({\n        context,\n        identifier,\n        identifierIndex,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap,\n        assets,\n        assetsInfo\n      }) {\n        // @ts-ignore\n        super(MODULE_TYPE, /** @type {string | undefined} */context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      }\n\n      // no source() so webpack 4 doesn't do add stuff to the bundle\n\n      size() {\n        return this.content.length;\n      }\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}|${this.layer || \"\"}|${this.supports || \"\"}|${this.media}}}`;\n      }\n\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}${this.layer ? ` (layer ${this.layer})` : \"\"}${this.supports ? ` (supports ${this.supports})` : \"\"}${this.media ? ` (media ${this.media})` : \"\"}`;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      getSourceTypes() {\n        return TYPES;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n      nameForCondition() {\n        const resource = /** @type {string} */\n        this._identifier.split(\"!\").pop();\n        const idx = resource.indexOf(\"?\");\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n        return resource;\n      }\n\n      /**\n       * @param {Module} module\n       */\n      updateCacheModule(module) {\n        if (!this.content.equals( /** @type {CssModule} */module.content) || this.layer !== /** @type {CssModule} */module.layer || this.supports !== /** @type {CssModule} */module.supports || this.media !== /** @type {CssModule} */module.media || (this.sourceMap ? !this.sourceMap.equals( /** @type {Uint8Array} **/\n        /** @type {CssModule} */module.sourceMap) : false) || this.assets !== /** @type {CssModule} */module.assets || this.assetsInfo !== /** @type {CssModule} */module.assetsInfo) {\n          this._needBuild = true;\n          this.content = /** @type {CssModule} */module.content;\n          this.layer = /** @type {CssModule} */module.layer;\n          this.supports = /** @type {CssModule} */module.supports;\n          this.media = /** @type {CssModule} */module.media;\n          this.sourceMap = /** @type {CssModule} */module.sourceMap;\n          this.assets = /** @type {CssModule} */module.assets;\n          this.assetsInfo = /** @type {CssModule} */module.assetsInfo;\n        }\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      needRebuild() {\n        return this._needBuild;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash( /** @type {string} */compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update( /** @type {NonNullable<Module[\"buildInfo\"]>} */this.buildInfo.hash);\n      }\n\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n    }\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssModule;\n  }\n\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return /** @type {CssDependencyConstructor} */(\n        cssDependencyCache.get(webpack)\n      );\n    }\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor({\n        identifier,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap\n      }, context, identifierIndex) {\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n        this.assetsInfo = undefined;\n      }\n\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n      deserialize(context) {\n        super.deserialize(context);\n      }\n    }\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssDependency;\n  }\n\n  /**\n   * Returns all hooks for the given compilation\n   * @param {Compilation} compilation the compilation\n   * @returns {MiniCssExtractPluginCompilationHooks} hooks\n   */\n  static getCompilationHooks(compilation) {\n    let hooks = compilationHooksMap.get(compilation);\n    if (!hooks) {\n      hooks = {\n        beforeTagInsert: new SyncWaterfallHook([\"source\", \"varNames\"], \"string\"),\n        linkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n        linkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n    return hooks;\n  }\n\n  /**\n   * @param {PluginOptions} [options]\n   */\n  constructor(options = {}) {\n    validate( /** @type {Schema} */schema, options, {\n      baseDataPath: \"options\"\n    });\n\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n    this._sortedModulesCache = new WeakMap();\n\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType:\n      // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" && /** @type {boolean} */options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n      if (typeof filename !== \"function\") {\n        const hasName = /** @type {string} */filename.includes(\"[name]\");\n        const hasId = /** @type {string} */filename.includes(\"[id]\");\n        const hasChunkHash = /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash = /** @type {string} */\n        filename.includes(\"[contenthash]\");\n\n        // Anything changing depending on chunk is fine\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename = /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n\n  /**\n   * @param {Compiler} compiler\n   */\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n    if (this.options.experimentalUseImportModule) {\n      if (typeof ( /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule) === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    }\n\n    // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n    if (splitChunks) {\n      if ( /** @type {string[]} */splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create({\n          dependencies: [dependency]\n        }, callback) {\n          callback(\n          // eslint-disable-next-line no-undefined\n          undefined, new CssModule( /** @type {CssDependency} */dependency));\n        }\n      }\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n      }\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, {\n        chunk\n      }) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack;\n\n        // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n\n        /** @type {CssModule[]} */\n        const renderedModules = Array.from( /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module =>\n        // @ts-ignore\n        module.type === MODULE_TYPE);\n        const filenameTemplate = /** @type {string} */\n\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk, /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash( /** @type {string} */hashFunction);\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          }\n\n          // eslint-disable-next-line no-param-reassign\n          chunk.contentHash[MODULE_TYPE] = /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      });\n\n      // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n      if (!this.options.runtime) {\n        return;\n      }\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n          for (const module of modules) {\n            // @ts-ignore\n            if (module.type === MODULE_TYPE) {\n              obj[( /** @type {string} */chunk.id)] = 1;\n              break;\n            }\n          }\n        }\n        return obj;\n      };\n\n      /**\n       * @param {Chunk} chunk chunk\n       * @param {ChunkGraph} chunkGraph chunk graph\n       * @returns {boolean} true, when the chunk has css\n       */\n      function chunkHasCss(chunk, chunkGraph) {\n        // this function replace:\n        // const chunkHasCss = require(\"webpack/lib/css/CssModulesPlugin\").chunkHasCss;\n        return !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css/mini-extract\");\n      }\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n        generate() {\n          const {\n            chunkGraph,\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = /** @type {Compilation} */this.compilation;\n          const chunkMap = getCssChunkObject( /** @type {Chunk} */chunk, /** @type {Compilation} */this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n          const conditionMap = /** @type {ChunkGraph} */chunkGraph.getChunkConditionMap( /** @type {Chunk} */chunk, chunkHasCss);\n          const hasCssMatcher = compileBooleanMatcher(conditionMap);\n          const withPrefetch = runtimeRequirements.has(RuntimeGlobals.prefetchChunkHandlers);\n          const withPreload = runtimeRequirements.has(RuntimeGlobals.preloadChunkHandlers);\n          const {\n            linkPreload,\n            linkPrefetch\n          } = MiniCssExtractPlugin.getCompilationHooks(compilation);\n          return Template.asString(['if (typeof document === \"undefined\") return;', `var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, oldTag, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`linkTag.nonce = ${RuntimeGlobals.scriptNonce};`), \"}\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && event.type;\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + errorType + \": \" + realHref + \")\");', 'err.name = \"ChunkLoadError\";',\n          // TODO remove `code` in the future major release to align with webpack\n          'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"if (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", MiniCssExtractPlugin.getCompilationHooks(compilation).beforeTagInsert.call(\"\", {\n            tag: \"linkTag\",\n            chunkId: \"chunkId\",\n            href: \"fullhref\",\n            resolve: \"resolve\",\n            reject: \"reject\"\n          }) || \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"if (oldTag) {\", Template.indent([\"oldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\"]), \"} else {\", Template.indent([\"document.head.appendChild(linkTag);\"]), \"}\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, null, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent( /** @type {string[]} */\n          ( /** @type {Chunk} */chunk.ids).map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, oldTag, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\", \"\", withPrefetch && hasCssMatcher !== false ? `${RuntimeGlobals.prefetchChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId\", [`if((!${RuntimeGlobals.hasOwnProperty}(installedCssChunks, chunkId) || installedCssChunks[chunkId] === undefined) && ${hasCssMatcher === true ? \"true\" : hasCssMatcher(\"chunkId\")}) {`, Template.indent([\"installedCssChunks[chunkId] = null;\", linkPrefetch.call(Template.asString([\"var link = document.createElement('link');\", crossOriginLoading ? `link.crossOrigin = ${JSON.stringify(crossOriginLoading)};` : \"\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`), \"}\", 'link.rel = \"prefetch\";', 'link.as = \"style\";', `link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.require}.miniCssF(chunkId);`]), /** @type {Chunk} */chunk), \"document.head.appendChild(link);\"]), \"}\"])};` : \"// no prefetching\", \"\", withPreload && hasCssMatcher !== false ? `${RuntimeGlobals.preloadChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId\", [`if((!${RuntimeGlobals.hasOwnProperty}(installedCssChunks, chunkId) || installedCssChunks[chunkId] === undefined) && ${hasCssMatcher === true ? \"true\" : hasCssMatcher(\"chunkId\")}) {`, Template.indent([\"installedCssChunks[chunkId] = null;\", linkPreload.call(Template.asString([\"var link = document.createElement('link');\", \"link.charset = 'utf-8';\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`), \"}\", 'link.rel = \"preload\";', 'link.as = \"style\";', `link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.require}.miniCssF(chunkId);`, crossOriginLoading ? crossOriginLoading === \"use-credentials\" ? 'link.crossOrigin = \"use-credentials\";' : Template.asString([\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\", Template.indent(`link.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\"]), /** @type {Chunk} */chunk), \"document.head.appendChild(link);\"]), \"}\"])};` : \"// no preloaded\"]);\n        }\n      }\n      const enabledChunks = new WeakSet();\n\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n        enabledChunks.add(chunk);\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.prefetchChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.preloadChunkHandlers).tap(pluginName, handler);\n    });\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n    if (usedModules || !modules) {\n      return /** @type {Set<CssModule>} */usedModules;\n    }\n\n    /** @type {CssModule[]} */\n    const modulesList = [...modules];\n    // Store dependencies for modules\n    /** @type {Map<CssModule, Set<CssModule>>} */\n    const moduleDependencies = new Map(modulesList.map(m => [m, ( /** @type {Set<CssModule>} */\n    new Set())]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()]));\n    // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n    /** @type {CssModule[][]} */\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      })\n      // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => /** @type {number} */b.index - ( /** @type {number} */a.index)).map(item => item.module);\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons = /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n\n          /** @type {Set<CssModule>} */\n          set.add(module);\n          const reason = reasons.get(module) || ( /** @type {Set<ChunkGroup>} */new Set());\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n      return sortedModules;\n    });\n\n    // set with already included modules in correct order\n    usedModules = new Set();\n\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n    const unusedModulesFilter = m => !( /** @type {Set<CssModule>} */usedModules.has(m));\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps;\n\n      // get first module where dependencies are fulfilled\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        }\n\n        // skip empty lists\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module);\n          // determine dependencies that are not yet included\n          const failedDeps = Array.from( /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter);\n\n          // store best match for fallback behavior\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add( /** @type {CssModule} */list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule = /** @type {CssModule[]} */bestMatch.pop();\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get( /** @type {CssModule} */fallbackModule);\n          compilation.warnings.push( /** @type {WebpackError} */\n\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ... /** @type {CssModule[]} */bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get( /** @type {CssModule} */fallbackModule);\n            const failedChunkGroups = Array.from( /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n        usedModules.add( /** @type {CssModule} */fallbackModule);\n      }\n    }\n    this._sortedModulesCache.set(chunk, usedModules);\n    return usedModules;\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        }\n\n        // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n        if (module.media || module.supports || typeof module.layer !== \"undefined\") {\n          let atImportExtra = \"\";\n          const needLayer = typeof module.layer !== \"undefined\";\n          if (needLayer) {\n            atImportExtra += module.layer.length > 0 ? ` layer(${module.layer})` : \" layer\";\n          }\n          if (module.supports) {\n            atImportExtra += ` supports(${module.supports})`;\n          }\n          if (module.media) {\n            atImportExtra += ` ${module.media}`;\n          }\n\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, `${atImportExtra};`);\n        }\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n        const needLayer = typeof module.layer !== \"undefined\";\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false);\n\n        // replacements\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n        source.add(\"\\n\");\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n    return new ConcatSource(externalsSource, source);\n  }\n}\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;","map":{"version":3,"names":["path","require","validate","SyncWaterfallHook","schema","trueFn","MODULE_TYPE","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","SINGLE_DOT_PATH_SEGMENT","compareModulesByIdentifier","getUndoPath","BASE_URI","compileBooleanMatcher","pluginName","pluginSymbol","Symbol","DEFAULT_FILENAME","TYPES","Set","CODE_GENERATION_RESULT","sources","Map","runtimeRequirements","cssModuleCache","WeakMap","cssDependencyCache","registered","WeakSet","compilationHooksMap","MiniCssExtractPlugin","getCssModule","webpack","has","get","CssModule","Module","constructor","context","identifier","identifierIndex","content","layer","supports","media","sourceMap","assets","assetsInfo","id","_context","_identifier","_identifierIndex","_needBuild","size","length","readableIdentifier","requestShortener","shorten","getSourceTypes","codeGeneration","nameForCondition","resource","split","pop","idx","indexOf","substring","updateCacheModule","module","equals","needRebuild","needBuild","callback","undefined","build","options","compilation","resolver","fileSystem","buildInfo","cacheable","hash","_computeHash","outputOptions","hashFunction","buildMeta","util","createHash","update","digest","updateHash","serialize","write","deserialize","read","set","serialization","register","resolve","__dirname","instance","contextModule","dep","getCssDependency","CssDependency","Dependency","getResourceIdentifier","getModuleEvaluationSideEffectsState","ModuleGraphConnection","TRANSITIVE_ONLY","getCompilationHooks","hooks","beforeTagInsert","linkPreload","linkPrefetch","baseDataPath","_sortedModulesCache","Object","assign","filename","ignoreOrder","experimentalUseImportModule","runtime","runtimeOptions","insert","linkType","attributes","chunkFilename","hasName","includes","hasId","hasChunkHash","hasContentHash","replace","apply","compiler","experiments","executeModule","add","registerLoader","splitChunks","optimization","defaultSizeTypes","push","NormalModule","tap","loader","normalModuleHook","loaderContext","thisCompilation","CssModuleFactory","create","dependencies","dependency","dependencyFactories","CssDependencyTemplate","dependencyTemplates","renderManifest","result","chunk","chunkGraph","HotUpdateChunk","renderedModules","Array","from","getChunkModules","filter","type","filenameTemplate","canBeInitial","render","renderContentAsset","runtimeTemplate","contentHashType","pathOptions","contentHash","modules","sortModules","getChunkModulesIterableBySourceType","hashDigest","hashDigestLength","m","getModuleHash","Template","RuntimeGlobals","RuntimeModule","getCssChunkObject","mainChunk","obj","getAllAsyncChunks","getOrderedChunkModulesIterable","chunkHasCss","CssLoadingRuntimeModule","generate","crossOriginLoading","chunkMap","withLoading","ensureChunkHandlers","keys","withHmr","hmrDownloadUpdateHandlers","conditionMap","getChunkConditionMap","hasCssMatcher","withPrefetch","prefetchChunkHandlers","withPreload","preloadChunkHandlers","asString","basicFunction","entries","map","entry","key","value","JSON","stringify","scriptNonce","indent","call","tag","chunkId","href","reject","toString","publicPath","ids","join","hasOwnProperty","enabledChunks","handler","test","getFullHash","addRuntimeModule","GetChunkFilenameRuntimeModule","referencedChunk","runtimeRequirementInTree","for","modulesIterable","usedModules","modulesList","moduleDependencies","moduleDependenciesReasons","modulesByChunkGroup","groupsIterable","chunkGroup","sortedModules","index","getModulePostOrderIndex","item","sort","a","b","i","reasons","j","reason","unusedModulesFilter","success","bestMatch","bestMatchDeps","list","deps","failedDeps","fallbackModule","warnings","Error","name","goodReasonsMap","goodReasons","failedChunkGroups","cg","goodChunkGroups","Boolean","pathData","ConcatSource","SourceMapSource","RawSource","source","externalsSource","startsWithAtRuleImport","header","pathinfo","reqStr","reqStrStar","repeat","headerStr","atImportExtra","needLayer","getPathWithInfo","undoPath","outputPath","RegExp","entryOptions","getEntryOptions","baseUriReplacement","baseUri","exports"],"sources":["C:/Users/pehqi/my-react-app/node_modules/mini-css-extract-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\n/* eslint-disable class-methods-use-this */\n\nconst path = require(\"path\");\nconst {\n  validate\n} = require(\"schema-utils\");\nconst {\n  SyncWaterfallHook\n} = require(\"tapable\");\nconst schema = require(\"./plugin-options.json\");\nconst {\n  trueFn,\n  MODULE_TYPE,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  compareModulesByIdentifier,\n  getUndoPath,\n  BASE_URI,\n  compileBooleanMatcher\n} = require(\"./utils\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n/** @typedef {import(\"webpack\").ChunkGraph} ChunkGraph */\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n/** @typedef {Parameters<import(\"webpack\").Chunk[\"isInGroup\"]>[0]} ChunkGroup */\n/** @typedef {import(\"webpack\").Module} Module */\n/** @typedef {import(\"webpack\").Dependency} Dependency */\n/** @typedef {import(\"webpack\").sources.Source} Source */\n/** @typedef {import(\"webpack\").Configuration} Configuration */\n/** @typedef {import(\"webpack\").WebpackError} WebpackError */\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n/** @typedef {import(\"./loader.js\").Dependency} LoaderDependency */\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {string | ((resourcePath: string, rootContext: string) => string)} [publicPath]\n * @property {boolean} [emit]\n * @property {boolean} [esModule]\n * @property {string} [layer]\n * @property {boolean} [defaultExport]\n */\n\n/**\n * @typedef {Object} PluginOptions\n * @property {Required<Configuration>['output']['filename']} [filename]\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} [ignoreOrder]\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} [runtime]\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} NormalizedPluginOptions\n * @property {Required<Configuration>['output']['filename']} filename\n * @property {Required<Configuration>['output']['chunkFilename']} [chunkFilename]\n * @property {boolean} ignoreOrder\n * @property {string | ((linkTag: HTMLLinkElement) => void)} [insert]\n * @property {Record<string, string>} [attributes]\n * @property {string | false | 'text/css'} [linkType]\n * @property {boolean} runtime\n * @property {boolean} [experimentalUseImportModule]\n */\n\n/**\n * @typedef {Object} RuntimeOptions\n * @property {string | ((linkTag: HTMLLinkElement) => void) | undefined} insert\n * @property {string | false | 'text/css'} linkType\n * @property {Record<string, string> | undefined} attributes\n */\n\n/** @typedef {any} TODO */\n\nconst pluginName = \"mini-css-extract-plugin\";\nconst pluginSymbol = Symbol(pluginName);\nconst DEFAULT_FILENAME = \"[name].css\";\n/**\n * @type {Set<string>}\n */\nconst TYPES = new Set([MODULE_TYPE]);\n/**\n * @type {ReturnType<Module[\"codeGeneration\"]>}\n */\nconst CODE_GENERATION_RESULT = {\n  sources: new Map(),\n  runtimeRequirements: new Set()\n};\n\n/** @typedef {Module & { content: Buffer, media?: string, sourceMap?: Buffer, supports?: string, layer?: string, assets?: { [key: string]: TODO }, assetsInfo?: Map<string, AssetInfo> }} CssModule */\n/** @typedef {{ context: string | null, identifier: string, identifierIndex: number, content: Buffer, sourceMap?: Buffer, media?: string, supports?: string, layer?: TODO, assetsInfo?: Map<string, AssetInfo>, assets?: { [key: string]: TODO }}} CssModuleDependency */\n/** @typedef {{ new(dependency: CssModuleDependency): CssModule }} CssModuleConstructor */\n/** @typedef {Dependency & CssModuleDependency} CssDependency */\n/** @typedef {Omit<LoaderDependency, \"context\">} CssDependencyOptions */\n/** @typedef {{ new(loaderDependency: CssDependencyOptions, context: string | null, identifierIndex: number): CssDependency }} CssDependencyConstructor */\n/**\n * @typedef {Object} VarNames\n * @property {string} tag\n * @property {string} chunkId\n * @property {string} href\n * @property {string} resolve\n * @property {string} reject\n */\n/**\n * @typedef {Object} MiniCssExtractPluginCompilationHooks\n * @property {import(\"tapable\").SyncWaterfallHook<[string, VarNames], string>} beforeTagInsert\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPreload\n * @property {SyncWaterfallHook<[string, Chunk]>} linkPrefetch\n */\n\n/**\n *\n * @type {WeakMap<Compiler[\"webpack\"], CssModuleConstructor>}\n */\nconst cssModuleCache = new WeakMap();\n/**\n * @type {WeakMap<Compiler[\"webpack\"], CssDependencyConstructor>}\n */\nconst cssDependencyCache = new WeakMap();\n/**\n * @type {WeakSet<Compiler[\"webpack\"]>}\n */\nconst registered = new WeakSet();\n\n/** @type {WeakMap<Compilation, MiniCssExtractPluginCompilationHooks>} */\nconst compilationHooksMap = new WeakMap();\nclass MiniCssExtractPlugin {\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssModuleConstructor}\n   */\n  static getCssModule(webpack) {\n    /**\n     * Prevent creation of multiple CssModule classes to allow other integrations to get the current CssModule.\n     */\n    if (cssModuleCache.has(webpack)) {\n      return /** @type {CssModuleConstructor} */cssModuleCache.get(webpack);\n    }\n    class CssModule extends webpack.Module {\n      /**\n       * @param {CssModuleDependency} dependency\n       */\n      constructor({\n        context,\n        identifier,\n        identifierIndex,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap,\n        assets,\n        assetsInfo\n      }) {\n        // @ts-ignore\n        super(MODULE_TYPE, /** @type {string | undefined} */context);\n        this.id = \"\";\n        this._context = context;\n        this._identifier = identifier;\n        this._identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.assets = assets;\n        this.assetsInfo = assetsInfo;\n        this._needBuild = true;\n      }\n\n      // no source() so webpack 4 doesn't do add stuff to the bundle\n\n      size() {\n        return this.content.length;\n      }\n      identifier() {\n        return `css|${this._identifier}|${this._identifierIndex}|${this.layer || \"\"}|${this.supports || \"\"}|${this.media}}}`;\n      }\n\n      /**\n       * @param {Parameters<Module[\"readableIdentifier\"]>[0]} requestShortener\n       * @returns {ReturnType<Module[\"readableIdentifier\"]>}\n       */\n      readableIdentifier(requestShortener) {\n        return `css ${requestShortener.shorten(this._identifier)}${this._identifierIndex ? ` (${this._identifierIndex})` : \"\"}${this.layer ? ` (layer ${this.layer})` : \"\"}${this.supports ? ` (supports ${this.supports})` : \"\"}${this.media ? ` (media ${this.media})` : \"\"}`;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      getSourceTypes() {\n        return TYPES;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      codeGeneration() {\n        return CODE_GENERATION_RESULT;\n      }\n      nameForCondition() {\n        const resource = /** @type {string} */\n        this._identifier.split(\"!\").pop();\n        const idx = resource.indexOf(\"?\");\n        if (idx >= 0) {\n          return resource.substring(0, idx);\n        }\n        return resource;\n      }\n\n      /**\n       * @param {Module} module\n       */\n      updateCacheModule(module) {\n        if (!this.content.equals( /** @type {CssModule} */module.content) || this.layer !== /** @type {CssModule} */module.layer || this.supports !== /** @type {CssModule} */module.supports || this.media !== /** @type {CssModule} */module.media || (this.sourceMap ? !this.sourceMap.equals( /** @type {Uint8Array} **/\n        /** @type {CssModule} */module.sourceMap) : false) || this.assets !== /** @type {CssModule} */module.assets || this.assetsInfo !== /** @type {CssModule} */module.assetsInfo) {\n          this._needBuild = true;\n          this.content = /** @type {CssModule} */module.content;\n          this.layer = /** @type {CssModule} */module.layer;\n          this.supports = /** @type {CssModule} */module.supports;\n          this.media = /** @type {CssModule} */module.media;\n          this.sourceMap = /** @type {CssModule} */module.sourceMap;\n          this.assets = /** @type {CssModule} */module.assets;\n          this.assetsInfo = /** @type {CssModule} */module.assetsInfo;\n        }\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      needRebuild() {\n        return this._needBuild;\n      }\n\n      // eslint-disable-next-line class-methods-use-this\n      /**\n       * @param {Parameters<Module[\"needBuild\"]>[0]} context context info\n       * @param {Parameters<Module[\"needBuild\"]>[1]} callback callback function, returns true, if the module needs a rebuild\n       */\n      needBuild(context, callback) {\n        // eslint-disable-next-line no-undefined\n        callback(undefined, this._needBuild);\n      }\n\n      /**\n       * @param {Parameters<Module[\"build\"]>[0]} options\n       * @param {Parameters<Module[\"build\"]>[1]} compilation\n       * @param {Parameters<Module[\"build\"]>[2]} resolver\n       * @param {Parameters<Module[\"build\"]>[3]} fileSystem\n       * @param {Parameters<Module[\"build\"]>[4]} callback\n       */\n      build(options, compilation, resolver, fileSystem, callback) {\n        this.buildInfo = {\n          assets: this.assets,\n          assetsInfo: this.assetsInfo,\n          cacheable: true,\n          hash: this._computeHash( /** @type {string} */compilation.outputOptions.hashFunction)\n        };\n        this.buildMeta = {};\n        this._needBuild = false;\n        callback();\n      }\n\n      /**\n       * @private\n       * @param {string} hashFunction\n       * @returns {string | Buffer}\n       */\n      _computeHash(hashFunction) {\n        const hash = webpack.util.createHash(hashFunction);\n        hash.update(this.content);\n        if (this.layer) {\n          hash.update(this.layer);\n        }\n        hash.update(this.supports || \"\");\n        hash.update(this.media || \"\");\n        hash.update(this.sourceMap || \"\");\n        return hash.digest(\"hex\");\n      }\n\n      /**\n       * @param {Parameters<Module[\"updateHash\"]>[0]} hash\n       * @param {Parameters<Module[\"updateHash\"]>[1]} context\n       */\n      updateHash(hash, context) {\n        super.updateHash(hash, context);\n        hash.update( /** @type {NonNullable<Module[\"buildInfo\"]>} */this.buildInfo.hash);\n      }\n\n      /**\n       * @param {Parameters<Module[\"serialize\"]>[0]} context\n       */\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this._context);\n        write(this._identifier);\n        write(this._identifierIndex);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.assets);\n        write(this.assetsInfo);\n        write(this._needBuild);\n        super.serialize(context);\n      }\n\n      /**\n       * @param {Parameters<Module[\"deserialize\"]>[0]} context\n       */\n      deserialize(context) {\n        this._needBuild = context.read();\n        super.deserialize(context);\n      }\n    }\n    cssModuleCache.set(webpack, CssModule);\n    webpack.util.serialization.register(CssModule, path.resolve(__dirname, \"CssModule\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const contextModule = read();\n        const identifier = read();\n        const identifierIndex = read();\n        const content = read();\n        const layer = read();\n        const supports = read();\n        const media = read();\n        const sourceMap = read();\n        const assets = read();\n        const assetsInfo = read();\n        const dep = new CssModule({\n          context: contextModule,\n          identifier,\n          identifierIndex,\n          content,\n          layer,\n          supports,\n          media,\n          sourceMap,\n          assets,\n          assetsInfo\n        });\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssModule;\n  }\n\n  /**\n   * @param {Compiler[\"webpack\"]} webpack\n   * @returns {CssDependencyConstructor}\n   */\n  static getCssDependency(webpack) {\n    /**\n     * Prevent creation of multiple CssDependency classes to allow other integrations to get the current CssDependency.\n     */\n    if (cssDependencyCache.has(webpack)) {\n      return /** @type {CssDependencyConstructor} */(\n        cssDependencyCache.get(webpack)\n      );\n    }\n    class CssDependency extends webpack.Dependency {\n      /**\n       * @param {CssDependencyOptions} loaderDependency\n       * @param {string | null} context\n       * @param {number} identifierIndex\n       */\n      constructor({\n        identifier,\n        content,\n        layer,\n        supports,\n        media,\n        sourceMap\n      }, context, identifierIndex) {\n        super();\n        this.identifier = identifier;\n        this.identifierIndex = identifierIndex;\n        this.content = content;\n        this.layer = layer;\n        this.supports = supports;\n        this.media = media;\n        this.sourceMap = sourceMap;\n        this.context = context;\n        /** @type {{ [key: string]: Source } | undefined}} */\n        // eslint-disable-next-line no-undefined\n        this.assets = undefined;\n        /** @type {Map<string, AssetInfo> | undefined} */\n        // eslint-disable-next-line no-undefined\n        this.assetsInfo = undefined;\n      }\n\n      /**\n       * @returns {ReturnType<Dependency[\"getResourceIdentifier\"]>}\n       */\n      getResourceIdentifier() {\n        return `css-module-${this.identifier}-${this.identifierIndex}`;\n      }\n\n      /**\n       * @returns {ReturnType<Dependency[\"getModuleEvaluationSideEffectsState\"]>}\n       */\n      // eslint-disable-next-line class-methods-use-this\n      getModuleEvaluationSideEffectsState() {\n        return webpack.ModuleGraphConnection.TRANSITIVE_ONLY;\n      }\n\n      /**\n       * @param {Parameters<Dependency[\"serialize\"]>[0]} context\n       */\n      serialize(context) {\n        const {\n          write\n        } = context;\n        write(this.identifier);\n        write(this.content);\n        write(this.layer);\n        write(this.supports);\n        write(this.media);\n        write(this.sourceMap);\n        write(this.context);\n        write(this.identifierIndex);\n        write(this.assets);\n        write(this.assetsInfo);\n        super.serialize(context);\n      }\n\n      /**\n       * @param {Parameters<Dependency[\"deserialize\"]>[0]} context\n       */\n      deserialize(context) {\n        super.deserialize(context);\n      }\n    }\n    cssDependencyCache.set(webpack, CssDependency);\n    webpack.util.serialization.register(CssDependency, path.resolve(__dirname, \"CssDependency\"),\n    // @ts-ignore\n    null, {\n      serialize(instance, context) {\n        instance.serialize(context);\n      },\n      deserialize(context) {\n        const {\n          read\n        } = context;\n        const dep = new CssDependency({\n          identifier: read(),\n          content: read(),\n          layer: read(),\n          supports: read(),\n          media: read(),\n          sourceMap: read()\n        }, read(), read());\n        const assets = read();\n        const assetsInfo = read();\n        dep.assets = assets;\n        dep.assetsInfo = assetsInfo;\n        dep.deserialize(context);\n        return dep;\n      }\n    });\n    return CssDependency;\n  }\n\n  /**\n   * Returns all hooks for the given compilation\n   * @param {Compilation} compilation the compilation\n   * @returns {MiniCssExtractPluginCompilationHooks} hooks\n   */\n  static getCompilationHooks(compilation) {\n    let hooks = compilationHooksMap.get(compilation);\n    if (!hooks) {\n      hooks = {\n        beforeTagInsert: new SyncWaterfallHook([\"source\", \"varNames\"], \"string\"),\n        linkPreload: new SyncWaterfallHook([\"source\", \"chunk\"]),\n        linkPrefetch: new SyncWaterfallHook([\"source\", \"chunk\"])\n      };\n      compilationHooksMap.set(compilation, hooks);\n    }\n    return hooks;\n  }\n\n  /**\n   * @param {PluginOptions} [options]\n   */\n  constructor(options = {}) {\n    validate( /** @type {Schema} */schema, options, {\n      baseDataPath: \"options\"\n    });\n\n    /**\n     * @private\n     * @type {WeakMap<Chunk, Set<CssModule>>}\n     * @private\n     */\n    this._sortedModulesCache = new WeakMap();\n\n    /**\n     * @private\n     * @type {NormalizedPluginOptions}\n     */\n    this.options = Object.assign({\n      filename: DEFAULT_FILENAME,\n      ignoreOrder: false,\n      // TODO remove in the next major release\n      // eslint-disable-next-line no-undefined\n      experimentalUseImportModule: undefined,\n      runtime: true\n    }, options);\n\n    /**\n     * @private\n     * @type {RuntimeOptions}\n     */\n    this.runtimeOptions = {\n      insert: options.insert,\n      linkType:\n      // Todo in next major release set default to \"false\"\n      typeof options.linkType === \"boolean\" && /** @type {boolean} */options.linkType === true || typeof options.linkType === \"undefined\" ? \"text/css\" : options.linkType,\n      attributes: options.attributes\n    };\n    if (!this.options.chunkFilename) {\n      const {\n        filename\n      } = this.options;\n      if (typeof filename !== \"function\") {\n        const hasName = /** @type {string} */filename.includes(\"[name]\");\n        const hasId = /** @type {string} */filename.includes(\"[id]\");\n        const hasChunkHash = /** @type {string} */\n        filename.includes(\"[chunkhash]\");\n        const hasContentHash = /** @type {string} */\n        filename.includes(\"[contenthash]\");\n\n        // Anything changing depending on chunk is fine\n        if (hasChunkHash || hasContentHash || hasName || hasId) {\n          this.options.chunkFilename = filename;\n        } else {\n          // Otherwise prefix \"[id].\" in front of the basename to make it changing\n          this.options.chunkFilename = /** @type {string} */\n          filename.replace(/(^|\\/)([^/]*(?:\\?|$))/, \"$1[id].$2\");\n        }\n      } else {\n        this.options.chunkFilename = \"[id].css\";\n      }\n    }\n  }\n\n  /**\n   * @param {Compiler} compiler\n   */\n  apply(compiler) {\n    const {\n      webpack\n    } = compiler;\n    if (this.options.experimentalUseImportModule) {\n      if (typeof ( /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n      compiler.options.experiments.executeModule) === \"undefined\") {\n        /** @type {Compiler[\"options\"][\"experiments\"] & { executeModule?: boolean }} */\n        // eslint-disable-next-line no-param-reassign\n        compiler.options.experiments.executeModule = true;\n      }\n    }\n\n    // TODO bug in webpack, remove it after it will be fixed\n    // webpack tries to `require` loader firstly when serializer doesn't found\n    if (!registered.has(webpack)) {\n      registered.add(webpack);\n      webpack.util.serialization.registerLoader(/^mini-css-extract-plugin\\//, trueFn);\n    }\n    const {\n      splitChunks\n    } = compiler.options.optimization;\n    if (splitChunks) {\n      if ( /** @type {string[]} */splitChunks.defaultSizeTypes.includes(\"...\")) {\n        /** @type {string[]} */\n        splitChunks.defaultSizeTypes.push(MODULE_TYPE);\n      }\n    }\n    const CssModule = MiniCssExtractPlugin.getCssModule(webpack);\n    const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n    const {\n      NormalModule\n    } = compiler.webpack;\n    compiler.hooks.compilation.tap(pluginName, compilation => {\n      const {\n        loader: normalModuleHook\n      } = NormalModule.getCompilationHooks(compilation);\n      normalModuleHook.tap(pluginName,\n      /**\n       * @param {object} loaderContext\n       */\n      loaderContext => {\n        /** @type {object & { [pluginSymbol]: { experimentalUseImportModule: boolean | undefined } }} */\n        // eslint-disable-next-line no-param-reassign\n        loaderContext[pluginSymbol] = {\n          experimentalUseImportModule: this.options.experimentalUseImportModule\n        };\n      });\n    });\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      class CssModuleFactory {\n        /**\n         * @param {{ dependencies: Dependency[] }} dependencies\n         * @param {(arg0?: Error, arg1?: TODO) => void} callback\n         */\n        // eslint-disable-next-line class-methods-use-this\n        create({\n          dependencies: [dependency]\n        }, callback) {\n          callback(\n          // eslint-disable-next-line no-undefined\n          undefined, new CssModule( /** @type {CssDependency} */dependency));\n        }\n      }\n      compilation.dependencyFactories.set(CssDependency, new CssModuleFactory());\n      class CssDependencyTemplate {\n        // eslint-disable-next-line class-methods-use-this\n        apply() {}\n      }\n      compilation.dependencyTemplates.set(CssDependency, new CssDependencyTemplate());\n      compilation.hooks.renderManifest.tap(pluginName,\n      /**\n       * @param {ReturnType<Compilation[\"getRenderManifest\"]>} result\n       * @param {Parameters<Compilation[\"getRenderManifest\"]>[0]} chunk\n       * @returns {TODO}\n       */\n      (result, {\n        chunk\n      }) => {\n        const {\n          chunkGraph\n        } = compilation;\n        const {\n          HotUpdateChunk\n        } = webpack;\n\n        // We don't need hot update chunks for css\n        // We will use the real asset instead to update\n        if (chunk instanceof HotUpdateChunk) {\n          return;\n        }\n\n        /** @type {CssModule[]} */\n        const renderedModules = Array.from( /** @type {CssModule[]} */\n        this.getChunkModules(chunk, chunkGraph)).filter(module =>\n        // @ts-ignore\n        module.type === MODULE_TYPE);\n        const filenameTemplate = /** @type {string} */\n\n        chunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        if (renderedModules.length > 0) {\n          result.push({\n            render: () => this.renderContentAsset(compiler, compilation, chunk, renderedModules, compilation.runtimeTemplate.requestShortener, filenameTemplate, {\n              contentHashType: MODULE_TYPE,\n              chunk\n            }),\n            filenameTemplate,\n            pathOptions: {\n              chunk,\n              contentHashType: MODULE_TYPE\n            },\n            identifier: `${pluginName}.${chunk.id}`,\n            hash: chunk.contentHash[MODULE_TYPE]\n          });\n        }\n      });\n      compilation.hooks.contentHash.tap(pluginName, chunk => {\n        const {\n          outputOptions,\n          chunkGraph\n        } = compilation;\n        const modules = this.sortModules(compilation, chunk, /** @type {CssModule[]} */\n        chunkGraph.getChunkModulesIterableBySourceType(chunk, MODULE_TYPE), compilation.runtimeTemplate.requestShortener);\n        if (modules) {\n          const {\n            hashFunction,\n            hashDigest,\n            hashDigestLength\n          } = outputOptions;\n          const {\n            createHash\n          } = compiler.webpack.util;\n          const hash = createHash( /** @type {string} */hashFunction);\n          for (const m of modules) {\n            hash.update(chunkGraph.getModuleHash(m, chunk.runtime));\n          }\n\n          // eslint-disable-next-line no-param-reassign\n          chunk.contentHash[MODULE_TYPE] = /** @type {string} */\n          hash.digest(hashDigest).substring(0, hashDigestLength);\n        }\n      });\n\n      // All the code below is dedicated to the runtime and can be skipped when the `runtime` option is `false`\n      if (!this.options.runtime) {\n        return;\n      }\n      const {\n        Template,\n        RuntimeGlobals,\n        RuntimeModule,\n        runtime\n      } = webpack;\n\n      /**\n       * @param {Chunk} mainChunk\n       * @param {Compilation} compilation\n       * @returns {Record<string, number>}\n       */\n      // eslint-disable-next-line no-shadow\n      const getCssChunkObject = (mainChunk, compilation) => {\n        /** @type {Record<string, number>} */\n        const obj = {};\n        const {\n          chunkGraph\n        } = compilation;\n        for (const chunk of mainChunk.getAllAsyncChunks()) {\n          const modules = chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier);\n          for (const module of modules) {\n            // @ts-ignore\n            if (module.type === MODULE_TYPE) {\n              obj[( /** @type {string} */chunk.id)] = 1;\n              break;\n            }\n          }\n        }\n        return obj;\n      };\n\n      /**\n       * @param {Chunk} chunk chunk\n       * @param {ChunkGraph} chunkGraph chunk graph\n       * @returns {boolean} true, when the chunk has css\n       */\n      function chunkHasCss(chunk, chunkGraph) {\n        // this function replace:\n        // const chunkHasCss = require(\"webpack/lib/css/CssModulesPlugin\").chunkHasCss;\n        return !!chunkGraph.getChunkModulesIterableBySourceType(chunk, \"css/mini-extract\");\n      }\n      class CssLoadingRuntimeModule extends RuntimeModule {\n        /**\n         * @param {Set<string>} runtimeRequirements\n         * @param {RuntimeOptions} runtimeOptions\n         */\n        constructor(runtimeRequirements, runtimeOptions) {\n          super(\"css loading\", 10);\n          this.runtimeRequirements = runtimeRequirements;\n          this.runtimeOptions = runtimeOptions;\n        }\n        generate() {\n          const {\n            chunkGraph,\n            chunk,\n            runtimeRequirements\n          } = this;\n          const {\n            runtimeTemplate,\n            outputOptions: {\n              crossOriginLoading\n            }\n          } = /** @type {Compilation} */this.compilation;\n          const chunkMap = getCssChunkObject( /** @type {Chunk} */chunk, /** @type {Compilation} */this.compilation);\n          const withLoading = runtimeRequirements.has(RuntimeGlobals.ensureChunkHandlers) && Object.keys(chunkMap).length > 0;\n          const withHmr = runtimeRequirements.has(RuntimeGlobals.hmrDownloadUpdateHandlers);\n          if (!withLoading && !withHmr) {\n            return \"\";\n          }\n          const conditionMap = /** @type {ChunkGraph} */chunkGraph.getChunkConditionMap( /** @type {Chunk} */chunk, chunkHasCss);\n          const hasCssMatcher = compileBooleanMatcher(conditionMap);\n          const withPrefetch = runtimeRequirements.has(RuntimeGlobals.prefetchChunkHandlers);\n          const withPreload = runtimeRequirements.has(RuntimeGlobals.preloadChunkHandlers);\n          const {\n            linkPreload,\n            linkPrefetch\n          } = MiniCssExtractPlugin.getCompilationHooks(compilation);\n          return Template.asString(['if (typeof document === \"undefined\") return;', `var createStylesheet = ${runtimeTemplate.basicFunction(\"chunkId, fullhref, oldTag, resolve, reject\", ['var linkTag = document.createElement(\"link\");', this.runtimeOptions.attributes ? Template.asString(Object.entries(this.runtimeOptions.attributes).map(entry => {\n            const [key, value] = entry;\n            return `linkTag.setAttribute(${JSON.stringify(key)}, ${JSON.stringify(value)});`;\n          })) : \"\", 'linkTag.rel = \"stylesheet\";', this.runtimeOptions.linkType ? `linkTag.type = ${JSON.stringify(this.runtimeOptions.linkType)};` : \"\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`linkTag.nonce = ${RuntimeGlobals.scriptNonce};`), \"}\", `var onLinkComplete = ${runtimeTemplate.basicFunction(\"event\", [\"// avoid mem leaks.\", \"linkTag.onerror = linkTag.onload = null;\", \"if (event.type === 'load') {\", Template.indent([\"resolve();\"]), \"} else {\", Template.indent([\"var errorType = event && event.type;\", \"var realHref = event && event.target && event.target.href || fullhref;\", 'var err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\\\n(\" + errorType + \": \" + realHref + \")\");', 'err.name = \"ChunkLoadError\";',\n          // TODO remove `code` in the future major release to align with webpack\n          'err.code = \"CSS_CHUNK_LOAD_FAILED\";', \"err.type = errorType;\", \"err.request = realHref;\", \"if (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\", \"reject(err);\"]), \"}\"])}`, \"linkTag.onerror = linkTag.onload = onLinkComplete;\", \"linkTag.href = fullhref;\", crossOriginLoading ? Template.asString([`if (linkTag.href.indexOf(window.location.origin + '/') !== 0) {`, Template.indent(`linkTag.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\", MiniCssExtractPlugin.getCompilationHooks(compilation).beforeTagInsert.call(\"\", {\n            tag: \"linkTag\",\n            chunkId: \"chunkId\",\n            href: \"fullhref\",\n            resolve: \"resolve\",\n            reject: \"reject\"\n          }) || \"\", typeof this.runtimeOptions.insert !== \"undefined\" ? typeof this.runtimeOptions.insert === \"function\" ? `(${this.runtimeOptions.insert.toString()})(linkTag)` : Template.asString([`var target = document.querySelector(\"${this.runtimeOptions.insert}\");`, `target.parentNode.insertBefore(linkTag, target.nextSibling);`]) : Template.asString([\"if (oldTag) {\", Template.indent([\"oldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\"]), \"} else {\", Template.indent([\"document.head.appendChild(linkTag);\"]), \"}\"]), \"return linkTag;\"])};`, `var findStylesheet = ${runtimeTemplate.basicFunction(\"href, fullhref\", ['var existingLinkTags = document.getElementsByTagName(\"link\");', \"for(var i = 0; i < existingLinkTags.length; i++) {\", Template.indent([\"var tag = existingLinkTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");', 'if(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;']), \"}\", 'var existingStyleTags = document.getElementsByTagName(\"style\");', \"for(var i = 0; i < existingStyleTags.length; i++) {\", Template.indent([\"var tag = existingStyleTags[i];\", 'var dataHref = tag.getAttribute(\"data-href\");', \"if(dataHref === href || dataHref === fullhref) return tag;\"]), \"}\"])};`, `var loadStylesheet = ${runtimeTemplate.basicFunction(\"chunkId\", `return new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"if(findStylesheet(href, fullhref)) return resolve();\", \"createStylesheet(chunkId, fullhref, null, resolve, reject);\"])});`)}`, withLoading ? Template.asString([\"// object to store loaded CSS chunks\", \"var installedCssChunks = {\", Template.indent( /** @type {string[]} */\n          ( /** @type {Chunk} */chunk.ids).map(id => `${JSON.stringify(id)}: 0`).join(\",\\n\")), \"};\", \"\", `${RuntimeGlobals.ensureChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId, promises\", [`var cssChunks = ${JSON.stringify(chunkMap)};`, \"if(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\", \"else if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\", Template.indent([`promises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(${runtimeTemplate.basicFunction(\"\", \"installedCssChunks[chunkId] = 0;\")}, ${runtimeTemplate.basicFunction(\"e\", [\"delete installedCssChunks[chunkId];\", \"throw e;\"])}));`]), \"}\"])};`]) : \"// no chunk loading\", \"\", withHmr ? Template.asString([\"var oldTags = [];\", \"var newTags = [];\", `var applyHandler = ${runtimeTemplate.basicFunction(\"options\", [`return { dispose: ${runtimeTemplate.basicFunction(\"\", [\"for(var i = 0; i < oldTags.length; i++) {\", Template.indent([\"var oldTag = oldTags[i];\", \"if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\"]), \"}\", \"oldTags.length = 0;\"])}, apply: ${runtimeTemplate.basicFunction(\"\", ['for(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";', \"newTags.length = 0;\"])} };`])}`, `${RuntimeGlobals.hmrDownloadUpdateHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList\", [\"applyHandlers.push(applyHandler);\", `chunkIds.forEach(${runtimeTemplate.basicFunction(\"chunkId\", [`var href = ${RuntimeGlobals.require}.miniCssF(chunkId);`, `var fullhref = ${RuntimeGlobals.publicPath} + href;`, \"var oldTag = findStylesheet(href, fullhref);\", \"if(!oldTag) return;\", `promises.push(new Promise(${runtimeTemplate.basicFunction(\"resolve, reject\", [`var tag = createStylesheet(chunkId, fullhref, oldTag, ${runtimeTemplate.basicFunction(\"\", ['tag.as = \"style\";', 'tag.rel = \"preload\";', \"resolve();\"])}, reject);`, \"oldTags.push(oldTag);\", \"newTags.push(tag);\"])}));`])});`])}`]) : \"// no hmr\", \"\", withPrefetch && hasCssMatcher !== false ? `${RuntimeGlobals.prefetchChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId\", [`if((!${RuntimeGlobals.hasOwnProperty}(installedCssChunks, chunkId) || installedCssChunks[chunkId] === undefined) && ${hasCssMatcher === true ? \"true\" : hasCssMatcher(\"chunkId\")}) {`, Template.indent([\"installedCssChunks[chunkId] = null;\", linkPrefetch.call(Template.asString([\"var link = document.createElement('link');\", crossOriginLoading ? `link.crossOrigin = ${JSON.stringify(crossOriginLoading)};` : \"\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`), \"}\", 'link.rel = \"prefetch\";', 'link.as = \"style\";', `link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.require}.miniCssF(chunkId);`]), /** @type {Chunk} */chunk), \"document.head.appendChild(link);\"]), \"}\"])};` : \"// no prefetching\", \"\", withPreload && hasCssMatcher !== false ? `${RuntimeGlobals.preloadChunkHandlers}.miniCss = ${runtimeTemplate.basicFunction(\"chunkId\", [`if((!${RuntimeGlobals.hasOwnProperty}(installedCssChunks, chunkId) || installedCssChunks[chunkId] === undefined) && ${hasCssMatcher === true ? \"true\" : hasCssMatcher(\"chunkId\")}) {`, Template.indent([\"installedCssChunks[chunkId] = null;\", linkPreload.call(Template.asString([\"var link = document.createElement('link');\", \"link.charset = 'utf-8';\", `if (${RuntimeGlobals.scriptNonce}) {`, Template.indent(`link.setAttribute(\"nonce\", ${RuntimeGlobals.scriptNonce});`), \"}\", 'link.rel = \"preload\";', 'link.as = \"style\";', `link.href = ${RuntimeGlobals.publicPath} + ${RuntimeGlobals.require}.miniCssF(chunkId);`, crossOriginLoading ? crossOriginLoading === \"use-credentials\" ? 'link.crossOrigin = \"use-credentials\";' : Template.asString([\"if (link.href.indexOf(window.location.origin + '/') !== 0) {\", Template.indent(`link.crossOrigin = ${JSON.stringify(crossOriginLoading)};`), \"}\"]) : \"\"]), /** @type {Chunk} */chunk), \"document.head.appendChild(link);\"]), \"}\"])};` : \"// no preloaded\"]);\n        }\n      }\n      const enabledChunks = new WeakSet();\n\n      /**\n       * @param {Chunk} chunk\n       * @param {Set<string>} set\n       */\n      const handler = (chunk, set) => {\n        if (enabledChunks.has(chunk)) {\n          return;\n        }\n        enabledChunks.add(chunk);\n        if (typeof this.options.chunkFilename === \"string\" && /\\[(full)?hash(:\\d+)?\\]/.test(this.options.chunkFilename)) {\n          set.add(RuntimeGlobals.getFullHash);\n        }\n        set.add(RuntimeGlobals.publicPath);\n        compilation.addRuntimeModule(chunk, new runtime.GetChunkFilenameRuntimeModule(MODULE_TYPE, \"mini-css\", `${RuntimeGlobals.require}.miniCssF`,\n        /**\n         * @param {Chunk} referencedChunk\n         * @returns {TODO}\n         */\n        referencedChunk => {\n          if (!referencedChunk.contentHash[MODULE_TYPE]) {\n            return false;\n          }\n          return referencedChunk.canBeInitial() ? this.options.filename : this.options.chunkFilename;\n        }, false));\n        compilation.addRuntimeModule(chunk, new CssLoadingRuntimeModule(set, this.runtimeOptions));\n      };\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.ensureChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.hmrDownloadUpdateHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.prefetchChunkHandlers).tap(pluginName, handler);\n      compilation.hooks.runtimeRequirementInTree.for(RuntimeGlobals.preloadChunkHandlers).tap(pluginName, handler);\n    });\n  }\n\n  /**\n   * @private\n   * @param {Chunk} chunk\n   * @param {ChunkGraph} chunkGraph\n   * @returns {Iterable<Module>}\n   */\n  getChunkModules(chunk, chunkGraph) {\n    return typeof chunkGraph !== \"undefined\" ? chunkGraph.getOrderedChunkModulesIterable(chunk, compareModulesByIdentifier) : chunk.modulesIterable;\n  }\n\n  /**\n   * @private\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compilation[\"requestShortener\"]} requestShortener\n   * @returns {Set<CssModule>}\n   */\n  sortModules(compilation, chunk, modules, requestShortener) {\n    let usedModules = this._sortedModulesCache.get(chunk);\n    if (usedModules || !modules) {\n      return /** @type {Set<CssModule>} */usedModules;\n    }\n\n    /** @type {CssModule[]} */\n    const modulesList = [...modules];\n    // Store dependencies for modules\n    /** @type {Map<CssModule, Set<CssModule>>} */\n    const moduleDependencies = new Map(modulesList.map(m => [m, ( /** @type {Set<CssModule>} */\n    new Set())]));\n    /** @type {Map<CssModule, Map<CssModule, Set<ChunkGroup>>>} */\n    const moduleDependenciesReasons = new Map(modulesList.map(m => [m, new Map()]));\n    // Get ordered list of modules per chunk group\n    // This loop also gathers dependencies from the ordered lists\n    // Lists are in reverse order to allow to use Array.pop()\n    /** @type {CssModule[][]} */\n    const modulesByChunkGroup = Array.from(chunk.groupsIterable, chunkGroup => {\n      const sortedModules = modulesList.map(module => {\n        return {\n          module,\n          index: chunkGroup.getModulePostOrderIndex(module)\n        };\n      })\n      // eslint-disable-next-line no-undefined\n      .filter(item => item.index !== undefined).sort((a, b) => /** @type {number} */b.index - ( /** @type {number} */a.index)).map(item => item.module);\n      for (let i = 0; i < sortedModules.length; i++) {\n        const set = moduleDependencies.get(sortedModules[i]);\n        const reasons = /** @type {Map<CssModule, Set<ChunkGroup>>} */\n        moduleDependenciesReasons.get(sortedModules[i]);\n        for (let j = i + 1; j < sortedModules.length; j++) {\n          const module = sortedModules[j];\n\n          /** @type {Set<CssModule>} */\n          set.add(module);\n          const reason = reasons.get(module) || ( /** @type {Set<ChunkGroup>} */new Set());\n          reason.add(chunkGroup);\n          reasons.set(module, reason);\n        }\n      }\n      return sortedModules;\n    });\n\n    // set with already included modules in correct order\n    usedModules = new Set();\n\n    /**\n     * @param {CssModule} m\n     * @returns {boolean}\n     */\n    const unusedModulesFilter = m => !( /** @type {Set<CssModule>} */usedModules.has(m));\n    while (usedModules.size < modulesList.length) {\n      let success = false;\n      let bestMatch;\n      let bestMatchDeps;\n\n      // get first module where dependencies are fulfilled\n      for (const list of modulesByChunkGroup) {\n        // skip and remove already added modules\n        while (list.length > 0 && usedModules.has(list[list.length - 1])) {\n          list.pop();\n        }\n\n        // skip empty lists\n        if (list.length !== 0) {\n          const module = list[list.length - 1];\n          const deps = moduleDependencies.get(module);\n          // determine dependencies that are not yet included\n          const failedDeps = Array.from( /** @type {Set<CssModule>} */\n          deps).filter(unusedModulesFilter);\n\n          // store best match for fallback behavior\n          if (!bestMatchDeps || bestMatchDeps.length > failedDeps.length) {\n            bestMatch = list;\n            bestMatchDeps = failedDeps;\n          }\n          if (failedDeps.length === 0) {\n            // use this module and remove it from list\n            usedModules.add( /** @type {CssModule} */list.pop());\n            success = true;\n            break;\n          }\n        }\n      }\n      if (!success) {\n        // no module found => there is a conflict\n        // use list with fewest failed deps\n        // and emit a warning\n        const fallbackModule = /** @type {CssModule[]} */bestMatch.pop();\n        if (!this.options.ignoreOrder) {\n          const reasons = moduleDependenciesReasons.get( /** @type {CssModule} */fallbackModule);\n          compilation.warnings.push( /** @type {WebpackError} */\n\n          new Error([`chunk ${chunk.name || chunk.id} [${pluginName}]`, \"Conflicting order. Following module has been added:\", ` * ${\n          /** @type {CssModule} */fallbackModule.readableIdentifier(requestShortener)}`, \"despite it was not able to fulfill desired ordering with these modules:\", ... /** @type {CssModule[]} */bestMatchDeps.map(m => {\n            const goodReasonsMap = moduleDependenciesReasons.get(m);\n            const goodReasons = goodReasonsMap && goodReasonsMap.get( /** @type {CssModule} */fallbackModule);\n            const failedChunkGroups = Array.from( /** @type {Set<ChunkGroup>} */\n\n            /** @type {Map<CssModule, Set<ChunkGroup>>} */\n            reasons.get(m), cg => cg.name).join(\", \");\n            const goodChunkGroups = goodReasons && Array.from(goodReasons, cg => cg.name).join(\", \");\n            return [` * ${m.readableIdentifier(requestShortener)}`, `   - couldn't fulfill desired order of chunk group(s) ${failedChunkGroups}`, goodChunkGroups && `   - while fulfilling desired order of chunk group(s) ${goodChunkGroups}`].filter(Boolean).join(\"\\n\");\n          })].join(\"\\n\")));\n        }\n        usedModules.add( /** @type {CssModule} */fallbackModule);\n      }\n    }\n    this._sortedModulesCache.set(chunk, usedModules);\n    return usedModules;\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   * @param {Compilation} compilation\n   * @param {Chunk} chunk\n   * @param {CssModule[]} modules\n   * @param {Compiler[\"requestShortener\"]} requestShortener\n   * @param {string} filenameTemplate\n   * @param {Parameters<Exclude<Required<Configuration>['output']['filename'], string | undefined>>[0]} pathData\n   * @returns {Source}\n   */\n  renderContentAsset(compiler, compilation, chunk, modules, requestShortener, filenameTemplate, pathData) {\n    const usedModules = this.sortModules(compilation, chunk, modules, requestShortener);\n    const {\n      ConcatSource,\n      SourceMapSource,\n      RawSource\n    } = compiler.webpack.sources;\n    const source = new ConcatSource();\n    const externalsSource = new ConcatSource();\n    for (const module of usedModules) {\n      let content = module.content.toString();\n      const readableIdentifier = module.readableIdentifier(requestShortener);\n      const startsWithAtRuleImport = /^@import url/.test(content);\n      let header;\n      if (compilation.outputOptions.pathinfo) {\n        // From https://github.com/webpack/webpack/blob/29eff8a74ecc2f87517b627dee451c2af9ed3f3f/lib/ModuleInfoHeaderPlugin.js#L191-L194\n        const reqStr = readableIdentifier.replace(/\\*\\//g, \"*_/\");\n        const reqStrStar = \"*\".repeat(reqStr.length);\n        const headerStr = `/*!****${reqStrStar}****!*\\\\\\n  !*** ${reqStr} ***!\\n  \\\\****${reqStrStar}****/\\n`;\n        header = new RawSource(headerStr);\n      }\n      if (startsWithAtRuleImport) {\n        if (typeof header !== \"undefined\") {\n          externalsSource.add(header);\n        }\n\n        // HACK for IE\n        // http://stackoverflow.com/a/14676665/1458162\n        if (module.media || module.supports || typeof module.layer !== \"undefined\") {\n          let atImportExtra = \"\";\n          const needLayer = typeof module.layer !== \"undefined\";\n          if (needLayer) {\n            atImportExtra += module.layer.length > 0 ? ` layer(${module.layer})` : \" layer\";\n          }\n          if (module.supports) {\n            atImportExtra += ` supports(${module.supports})`;\n          }\n          if (module.media) {\n            atImportExtra += ` ${module.media}`;\n          }\n\n          // insert media into the @import\n          // this is rar\n          // TODO improve this and parse the CSS to support multiple medias\n          content = content.replace(/;|\\s*$/, `${atImportExtra};`);\n        }\n        externalsSource.add(content);\n        externalsSource.add(\"\\n\");\n      } else {\n        if (typeof header !== \"undefined\") {\n          source.add(header);\n        }\n        if (module.supports) {\n          source.add(`@supports (${module.supports}) {\\n`);\n        }\n        if (module.media) {\n          source.add(`@media ${module.media} {\\n`);\n        }\n        const needLayer = typeof module.layer !== \"undefined\";\n        if (needLayer) {\n          source.add(`@layer${module.layer.length > 0 ? ` ${module.layer}` : \"\"} {\\n`);\n        }\n        const {\n          path: filename\n        } = compilation.getPathWithInfo(filenameTemplate, pathData);\n        const undoPath = getUndoPath(filename, compiler.outputPath, false);\n\n        // replacements\n        content = content.replace(new RegExp(ABSOLUTE_PUBLIC_PATH, \"g\"), \"\");\n        content = content.replace(new RegExp(SINGLE_DOT_PATH_SEGMENT, \"g\"), \".\");\n        content = content.replace(new RegExp(AUTO_PUBLIC_PATH, \"g\"), undoPath);\n        const entryOptions = chunk.getEntryOptions();\n        const baseUriReplacement = entryOptions && entryOptions.baseUri || undoPath;\n        content = content.replace(new RegExp(BASE_URI, \"g\"), baseUriReplacement);\n        if (module.sourceMap) {\n          source.add(new SourceMapSource(content, readableIdentifier, module.sourceMap.toString()));\n        } else {\n          source.add(new RawSource(content));\n        }\n        source.add(\"\\n\");\n        if (needLayer) {\n          source.add(\"}\\n\");\n        }\n        if (module.media) {\n          source.add(\"}\\n\");\n        }\n        if (module.supports) {\n          source.add(\"}\\n\");\n        }\n      }\n    }\n    return new ConcatSource(externalsSource, source);\n  }\n}\nMiniCssExtractPlugin.pluginName = pluginName;\nMiniCssExtractPlugin.pluginSymbol = pluginSymbol;\nMiniCssExtractPlugin.loader = require.resolve(\"./loader\");\nmodule.exports = MiniCssExtractPlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}