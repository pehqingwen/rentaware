{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pehqi\\\\my-react-app\\\\src\\\\routes\\\\user_quotations.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserQuotations = () => {\n  _s();\n  const [quotations, setQuotations] = useState([]);\n  const [productNames, setProductNames] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      console.log('Making request...');\n      try {\n        const response = await axios.get('http://localhost:5000/api/accountinfo');\n        console.log('Data retrieved: ', response.data);\n        setQuotations(response.data);\n      } catch (error) {\n        if (error.response && error.response.status === 400) {\n          console.error('Error:', error.response.data);\n        } else {\n          console.error('Error logging in:', error.response ? error.response.data : error.message);\n        }\n      }\n    };\n    fetchData();\n  }, []);\n  const indexCount = index => {\n    return index + 1;\n  };\n  const datePart = string => {\n    return string.split('T')[0];\n  };\n  useEffect(() => {});\n  const getProductName = async item => {\n    try {\n      const response = await fetch('./products.json');\n      const data = await response.json();\n      const matchedItem = data.find(individual => individual.productID === item);\n      return matchedItem ? matchedItem.productName : null;\n    } catch (error) {\n      console.error('Error fetching product data: ', error);\n      return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quotations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-bg\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Index\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quotation_ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date of Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Product Names\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: quotations && quotations.length > 0 ? quotations.map((quotation, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: indexCount(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: quotation.quotation_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: datePart(quotation.date_of_creation)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: quotations.map(quotation => getProductName(quotation))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, indexCount(index), true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"5\",\n              children: \"No data available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), quotations.map((quotation, index) => /*#__PURE__*/_jsxDEV(\"div\", {}, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(UserQuotations, \"8+vjliWSTk26Ug3phGBHfByfaCs=\");\n_c = UserQuotations;\nexport default UserQuotations;\nvar _c;\n$RefreshReg$(_c, \"UserQuotations\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","UserQuotations","_s","quotations","setQuotations","productNames","setProductNames","fetchData","console","log","response","get","data","error","status","message","indexCount","index","datePart","string","split","getProductName","item","fetch","json","matchedItem","find","individual","productID","productName","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","quotation","quotation_id","date_of_creation","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/pehqi/my-react-app/src/routes/user_quotations.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserQuotations = () => {\r\n\r\n    const [quotations, setQuotations] = useState([]);\r\n    const [productNames, setProductNames] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            console.log('Making request...');\r\n            try {\r\n                const response = await axios.get('http://localhost:5000/api/accountinfo');\r\n                console.log('Data retrieved: ', response.data);\r\n                setQuotations(response.data);\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 400) {\r\n                    console.error('Error:', error.response.data);\r\n                } else {\r\n                    console.error('Error logging in:', error.response ? error.response.data : error.message);\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const indexCount = (index) => {\r\n        return index + 1;\r\n    }\r\n\r\n    const datePart = (string) => {\r\n        return string.split('T')[0];\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n    })\r\n    const getProductName = async (item) => {\r\n        try {\r\n            const response = await fetch('./products.json');\r\n            const data = await response.json();\r\n            const matchedItem = data.find(individual => individual.productID === item);\r\n            return matchedItem ? matchedItem.productName : null;\r\n        } catch (error) {\r\n            console.error('Error fetching product data: ', error);\r\n            return null;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Quotations</h1>\r\n\r\n            <div className='white-bg'>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Index</th>\r\n                            <th>Quotation_ID</th>\r\n                            <th>Date of Request</th>\r\n                            <th>Product Names</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {(quotations && quotations.length > 0) ? (\r\n                            quotations.map((quotation, index) => (\r\n                                <tr key={indexCount(index)}>\r\n\r\n                                    <td>{indexCount(index)}</td>\r\n\r\n                                    <td>{quotation.quotation_id}</td>\r\n\r\n                                    <td>{datePart(quotation.date_of_creation)}</td>\r\n\r\n                                    {/* retrieve each prdt name from products.json file */}\r\n                                    <td>{(quotations.map(quotation => getProductName(quotation)))}</td>\r\n                                </tr>\r\n                            ))\r\n\r\n                        ) : (\r\n                            <tr>\r\n                                <td colSpan=\"5\">No data available</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            {\r\n                quotations.map((quotation, index) => (\r\n                    <div key={index}>\r\n                        {/* <p>ID: {quotation.quotation_id}</p>\r\n                    <p>Date: {quotation.date_of_creation}</p>\r\n                    <p>Product IDs: {quotation.productid_combination}</p>\r\n                    <p>Quantity: {quotation.quotation_quantity}</p> */}\r\n                    </div>\r\n                ))\r\n            }\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserQuotations; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}